{
  
    
        "post0": {
            "title": "Night@Museum Tri 3",
            "content": "Night@Museum . Night at the museum is a night at del norte from 6-7:30 pm and this is a night where family, friends, and students can come to del norte and take a trip around all of the elective classes. Ceramics, 3d Animation, Ap Computer Science, Drawing/Painting, and AP Art studio were displaying their Final projects to Friends and family. | ( This was a very fun night and I enjoyed looking at all of the art pieces and I can’t wait to be back again ) | . . | . . | . . | . In the End . Overall the expirence at the night of the museum was really fun and I love doing this every year and get to see many different great projects that people have really worked hard on and get to interact with your friends, or even people that you haven’t seen in a while. Overall 10/10. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/06/02/nightatmuseum.html",
            "relUrl": "/fastpages/markdown/2023/06/02/nightatmuseum.html",
            "date": " • Jun 2, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Sorting Algorithms Hacks",
            "content": "1 . Primitive types in Python include fundamental data types such as integers, floating-point numbers, strings, booleans, and None. These types represent basic values and have a fixed size in memory. . | Python doesn’t have explicit pass-by-reference semantics, the behavior of passing a list to a function resembles pass-by-reference, as modifications to the list within the function persist after the function call. . | . Practice Problems . Bubble sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order. This process is repeated until the entire list is sorted. Selection sort is another simple sorting algorithm that works by dividing the list into a sorted and an unsorted region. It repeatedly finds the smallest (or largest) element from the unsorted region and swaps it with the leftmost unsorted element, expanding the sorted region by one element. . | Merge sort is a divide-and-conquer algorithm that recursively divides the list into smaller sublists, sorts them, and then merges them back together to obtain a sorted list. It has a time complexity of O(n log n). insortion sort, It iterates through the list and repeatedly inserts each element into its correct position within the already sorted part of the list. It has a time complexity of O(n^2). . | What happened to this sort . Its comparing the twoo block and seeing which one is higher and lower and switching to be in the right order. Then it continues through the whole list to make sure the whole list is sorted. | . Stargies to sort this code ( Warmup ) . Bubble Sort: Iterate through the list multiple times, comparing adjacent elements and swapping them if they are in the wrong order. This process is repeated until the list is sorted. | . Selection Sort: Find the minimum element in the unsorted part of the list and swap it with the first unsorted element. Repeat this process for the remaining unsorted part until the entire list is sorted. .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/05/23/sortingalgorithms.html",
            "relUrl": "/fastpages/markdown/2023/05/23/sortingalgorithms.html",
            "date": " • May 23, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Building Simulation/Interaction Hacks",
            "content": "1. . Lists are ordered collections of elements, which can be of any type, such as integers, strings, or even other lists. The elements in a list are accessed by their position or index, starting from zero for the first element. Lists are mutable, meaning that you can add, remove, or modify elements in place. Lists are ideal for situations where you need to store a collection of homogeneous or heterogeneous items in a specific order. On the other hand, dictionaries are unordered collections of key-value pairs, where each key is unique and maps to a specific value. The keys and values can be of any type, such as integers, strings, or other objects. Dictionaries are accessed using the key, and not by position or index. Dictionaries are also mutable, so you can add, remove, or modify key-value pairs in place. Dictionaries are ideal for situations where you need to store a collection of items, each associated with a unique identifier. | . 2. . Here is the output of my own dictionary | . . 3. . Lmk if you need to see the block of code . | . 4. . .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/05/02/buidlinghacks.html",
            "relUrl": "/fastpages/markdown/2023/05/02/buidlinghacks.html",
            "date": " • May 2, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "2020 Practice Exam MCQ Corrections",
            "content": "I scored a 65/67 on the test | . . Q6 . . Incorrect. Program II correctly moves the robot to the gray square by moving the robot forward to the bottom right corner of the grid, rotating left, moving the robot forward to the upper right corner of the grid, rotating left, and moving forward to the gray square. | . Q19 . . Incorrect. While the number of registered users appears to have doubled each year for years 1 to 5, the number of registered users grew at a roughly constant rate for years 5 to 8. | . Reflection: . feel like I understand 2020 Practice Exam MCQ content from what is shown from my test score and after learning about it for the whole year. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/05/01/MCQcorrections.html",
            "relUrl": "/fastpages/markdown/2023/05/01/MCQcorrections.html",
            "date": " • May 1, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Logic Hacks",
            "content": "Logic Gates . 1. . Logic gates can be used to execute basic computer functions by implementing Boolean logic operations on binary inputs, which can be used to perform arithmetic, comparison, and control operations in a computer’s central processing unit (CPU) and other digital circuits. | . 2. . Boolean operations are abstract mathematical operations defined in Boolean algebra, while logic gates are physical devices or circuits that implement these operations by controlling the flow of electricity through them. Boolean operations are the abstract concepts used to describe logical relationships between variables, while logic gates are the physical components that perform these operations in digital circuits. | . 3. Quiz . I didn’t read two of the questions fully and I selected the wrong ones. | . . Binary Logic . . Binary Math . 1. . Write the two numbers one above the other, with the second number (the subtrahend) below the first number (the minuend). Starting from the rightmost digit of the subtrahend, subtract each digit from the corresponding digit of the minuend. If the digit in the subtrahend is larger than the digit in the minuend, borrow 1 from the next digit to the left in the minuend. Write the result of each subtraction below the corresponding digits of the subtrahend. If any borrow occurs in step 2, the borrowed digit in the minuend is reduced by 1. This process is repeated until no borrow occurs. Write the result of the subtraction as a binary number. | . 2. . My code isn’t uploading to my fastpages, it will be up by end of weekend. Ryan checked my code for it | . Api Hacks . 1. . . Outcome | . . Github Hacks . One hosting service website that is different from GitHub Pages is Netlify. One benefit of Netlify is that it offers continuous deployment, which means that every time you push changes to your Git repository, Netlify automatically builds and deploys your site. This allows for a seamless development workflow and eliminates the need for manual deployments. Additionally, Netlify offers features such as form handling, serverless functions, and global CDN, which can make it a great option for static site hosting and more complex web applications alike. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/04/28/logichacks.html",
            "relUrl": "/fastpages/markdown/2023/04/28/logichacks.html",
            "date": " • Apr 28, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Sass Hacks",
            "content": "Classwork . 1. What are 5 Basic UI Elements? . Buttons - Buttons are UI elements that allow users to interact with a website or application. They are often used to submit forms, trigger actions, or navigate to different pages. . | Text Fields - Text fields are UI elements that allow users to input text or data. They are commonly used for forms, search bars, and login fields. . | Dropdown Menus - Dropdown menus are UI elements that allow users to select from a list of options. They are often used in navigation menus, forms, and settings pages. . | Checkboxes - Checkboxes are UI elements that allow users to select one or more options from a list. They are commonly used in forms and settings pages. . | Icons - Icons are graphical representations of actions, objects, or concepts. . | 2. In your own words, explain what SASS does . Sass allows you to write more efficient and maintainable CSS code by providing a set of advanced features. | . 3. Benefits to Sass . Faster and more efficient CSS coding - Sass provides advanced features such as variables, nesting, mixins, and functions, which can significantly reduce the amount of code you need to write, and make your code more modular, reusable, and maintainable. . | Easier maintenance and updates - With Sass, you can split your stylesheets into smaller and more manageable modules, making it easier to update and maintain your codebase, and reducing the risk of introducing errors or conflicts. . | . 4. Describe/Explain one of the more “advanced” SASS properties below in detail . One of the more advanced Sass properties is the @each directive, which allows you to loop through a list or a map of values and generate CSS code dynamically. This can significantly reduce the amount of code you need to write, and make your code more modular, scalable, and maintainable. | . 5. How does the Game Number Guesser work? . Javascript gets a random number, and each guess compares your guess to the number, until you get the number correct. | . 6. Explain How Sass can be used to make game more appealing? . Using Sass can add different themes, colors, and even animations to make the gusser game more appealing. | . Hacks . p1. . I added a different Icon at the top | . . p2. . https://eligilmour.github.io/Eli-1/_pages/ThemeChanger.html . p3. . https://eligilmour.github.io/Eli-1/_pages/Numbergusser.html .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/04/27/sasshacks.html",
            "relUrl": "/fastpages/markdown/2023/04/27/sasshacks.html",
            "date": " • Apr 27, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Sorting Algorithms Notebook Code Runs",
            "content": "def mergeSort(arr, key): if len(arr) &gt; 1: mid = len(arr) // 2 left_half = arr[:mid] right_half = arr[mid:] mergeSort(left_half, key) mergeSort(right_half, key) i = j = k = 0 while i &lt; len(left_half) and j &lt; len(right_half): if left_half[i].get(key) &lt; right_half[j].get(key): arr[k] = left_half[i] i += 1 else: arr[k] = right_half[j] j += 1 k += 1 while i &lt; len(left_half): arr[k] = left_half[i] i += 1 k += 1 while j &lt; len(right_half): arr[k] = right_half[j] j += 1 k += 1 . Eli_list = [ {&quot;name&quot;: &quot;Bob&quot;, &quot;age&quot;: 25, &quot;city&quot;: &quot;London&quot;}, {&quot;name&quot;: &quot;Khalid&quot;, &quot;age&quot;: 32, &quot;city&quot;: &quot;New York&quot;}, {&quot;name&quot;: &quot;Eli&quot;, &quot;age&quot;: 19, &quot;city&quot;: &quot;Paris&quot;}, {&quot;name&quot;: &quot;David&quot;, &quot;age&quot;: 41, &quot;city&quot;: &quot;Tokyo&quot;}, {&quot;name&quot;: &quot;Eve&quot;, &quot;age&quot;: 28, &quot;city&quot;: &quot;Berlin&quot;} ] print(&quot;Original List:&quot;) print(Eli_list) . Original List: [{&#39;name&#39;: &#39;Bob&#39;, &#39;age&#39;: 25, &#39;city&#39;: &#39;London&#39;}, {&#39;name&#39;: &#39;Khalid&#39;, &#39;age&#39;: 32, &#39;city&#39;: &#39;New York&#39;}, {&#39;name&#39;: &#39;Eli&#39;, &#39;age&#39;: 19, &#39;city&#39;: &#39;Paris&#39;}, {&#39;name&#39;: &#39;David&#39;, &#39;age&#39;: 41, &#39;city&#39;: &#39;Tokyo&#39;}, {&#39;name&#39;: &#39;Eve&#39;, &#39;age&#39;: 28, &#39;city&#39;: &#39;Berlin&#39;}] . import time def bubbleSort(arr, key): n = len(arr) for i in range(n - 1): for j in range(0, n - i - 1): if arr[j][key] &gt; arr[j + 1][key]: arr[j], arr[j + 1] = arr[j + 1], arr[j] Eli_list = [ {&quot;name&quot;: &quot;Bob&quot;, &quot;age&quot;: 25, &quot;city&quot;: &quot;London&quot;}, {&quot;name&quot;: &quot;Khalid&quot;, &quot;age&quot;: 32, &quot;city&quot;: &quot;New York&quot;}, {&quot;name&quot;: &quot;Eli&quot;, &quot;age&quot;: 19, &quot;city&quot;: &quot;Paris&quot;}, {&quot;name&quot;: &quot;David&quot;, &quot;age&quot;: 41, &quot;city&quot;: &quot;Tokyo&quot;}, {&quot;name&quot;: &quot;Eve&quot;, &quot;age&quot;: 28, &quot;city&quot;: &quot;Berlin&quot;} ] print(&quot; nBubble Sort:&quot;) start_time = time.time() for key in Eli_list[0]: bubbleSort(Eli_list, key) print(f&quot; nSorted by &#39;{key}&#39;:&quot;) print(Eli_list) end_time = time.time() bubble_sort_time = end_time - start_time print(&quot;Bubble Sort Time:&quot;, bubble_sort_time) . Bubble Sort: Sorted by &#39;name&#39;: [{&#39;name&#39;: &#39;Bob&#39;, &#39;age&#39;: 25, &#39;city&#39;: &#39;London&#39;}, {&#39;name&#39;: &#39;David&#39;, &#39;age&#39;: 41, &#39;city&#39;: &#39;Tokyo&#39;}, {&#39;name&#39;: &#39;Eli&#39;, &#39;age&#39;: 19, &#39;city&#39;: &#39;Paris&#39;}, {&#39;name&#39;: &#39;Eve&#39;, &#39;age&#39;: 28, &#39;city&#39;: &#39;Berlin&#39;}, {&#39;name&#39;: &#39;Khalid&#39;, &#39;age&#39;: 32, &#39;city&#39;: &#39;New York&#39;}] Sorted by &#39;age&#39;: [{&#39;name&#39;: &#39;Eli&#39;, &#39;age&#39;: 19, &#39;city&#39;: &#39;Paris&#39;}, {&#39;name&#39;: &#39;Bob&#39;, &#39;age&#39;: 25, &#39;city&#39;: &#39;London&#39;}, {&#39;name&#39;: &#39;Eve&#39;, &#39;age&#39;: 28, &#39;city&#39;: &#39;Berlin&#39;}, {&#39;name&#39;: &#39;Khalid&#39;, &#39;age&#39;: 32, &#39;city&#39;: &#39;New York&#39;}, {&#39;name&#39;: &#39;David&#39;, &#39;age&#39;: 41, &#39;city&#39;: &#39;Tokyo&#39;}] Sorted by &#39;city&#39;: [{&#39;name&#39;: &#39;Eve&#39;, &#39;age&#39;: 28, &#39;city&#39;: &#39;Berlin&#39;}, {&#39;name&#39;: &#39;Bob&#39;, &#39;age&#39;: 25, &#39;city&#39;: &#39;London&#39;}, {&#39;name&#39;: &#39;Khalid&#39;, &#39;age&#39;: 32, &#39;city&#39;: &#39;New York&#39;}, {&#39;name&#39;: &#39;Eli&#39;, &#39;age&#39;: 19, &#39;city&#39;: &#39;Paris&#39;}, {&#39;name&#39;: &#39;David&#39;, &#39;age&#39;: 41, &#39;city&#39;: &#39;Tokyo&#39;}] Bubble Sort Time: 0.0010685920715332031 . import time print(&quot; nMerge Sort:&quot;) start_time = time.time() for key in Eli_list[0]: mergeSort(Eli_list, key) print(f&quot; nSorted by &#39;{key}&#39;:&quot;) print(Eli_list) end_time = time.time() merge_sort_time = end_time - start_time print(&quot;Merge Sort Time:&quot;, merge_sort_time) . Merge Sort: Sorted by &#39;name&#39;: [{&#39;name&#39;: &#39;Bob&#39;, &#39;age&#39;: 25, &#39;city&#39;: &#39;London&#39;}, {&#39;name&#39;: &#39;David&#39;, &#39;age&#39;: 41, &#39;city&#39;: &#39;Tokyo&#39;}, {&#39;name&#39;: &#39;Eli&#39;, &#39;age&#39;: 19, &#39;city&#39;: &#39;Paris&#39;}, {&#39;name&#39;: &#39;Eve&#39;, &#39;age&#39;: 28, &#39;city&#39;: &#39;Berlin&#39;}, {&#39;name&#39;: &#39;Khalid&#39;, &#39;age&#39;: 32, &#39;city&#39;: &#39;New York&#39;}] Sorted by &#39;age&#39;: [{&#39;name&#39;: &#39;Eli&#39;, &#39;age&#39;: 19, &#39;city&#39;: &#39;Paris&#39;}, {&#39;name&#39;: &#39;Bob&#39;, &#39;age&#39;: 25, &#39;city&#39;: &#39;London&#39;}, {&#39;name&#39;: &#39;Eve&#39;, &#39;age&#39;: 28, &#39;city&#39;: &#39;Berlin&#39;}, {&#39;name&#39;: &#39;Khalid&#39;, &#39;age&#39;: 32, &#39;city&#39;: &#39;New York&#39;}, {&#39;name&#39;: &#39;David&#39;, &#39;age&#39;: 41, &#39;city&#39;: &#39;Tokyo&#39;}] Sorted by &#39;city&#39;: [{&#39;name&#39;: &#39;Eve&#39;, &#39;age&#39;: 28, &#39;city&#39;: &#39;Berlin&#39;}, {&#39;name&#39;: &#39;Bob&#39;, &#39;age&#39;: 25, &#39;city&#39;: &#39;London&#39;}, {&#39;name&#39;: &#39;Khalid&#39;, &#39;age&#39;: 32, &#39;city&#39;: &#39;New York&#39;}, {&#39;name&#39;: &#39;Eli&#39;, &#39;age&#39;: 19, &#39;city&#39;: &#39;Paris&#39;}, {&#39;name&#39;: &#39;David&#39;, &#39;age&#39;: 41, &#39;city&#39;: &#39;Tokyo&#39;}] Merge Sort Time: 0.000985860824584961 . print(&quot; nSorting Analysis:&quot;) print(f&quot;Number of elements: {len(Eli_list)}&quot;) print(f&quot;Bubble Sort Comparisons: {len(Eli_list) * (len(Eli_list) - 1) // 2}&quot;) print(f&quot;Bubble Sort Swaps: {len(Eli_list) * (len(Eli_list) - 1) // 2}&quot;) print(f&quot;Bubble Sort Time: {bubble_sort_time} seconds&quot;) print(f&quot;Merge Sort Comparisons: {len(Eli_list) * (len(Eli_list) - 1) // 2}&quot;) print(f&quot;Merge Sort Swaps: {len(Eli_list) * (len(Eli_list) - 1) // 2}&quot;) print(f&quot;Merge Sort Time: {merge_sort_time} seconds&quot;) . Sorting Analysis: Number of elements: 5 Bubble Sort Comparisons: 10 Bubble Sort Swaps: 10 Bubble Sort Time: 0.0010685920715332031 seconds Merge Sort Comparisons: 10 Merge Sort Swaps: 10 Merge Sort Time: 0.000985860824584961 seconds .",
            "url": "https://eligilmour.github.io/Eli-1/2023/04/27/game.html",
            "relUrl": "/2023/04/27/game.html",
            "date": " • Apr 27, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Dev Ops Hacks",
            "content": "KASM Hacks . Virtual desktops allow users to access a complete desktop environment remotely, without the need for physical hardware. KASM is a security feature that isolates each virtual machine from others, providing enhanced security. In an AP CSP environment, virtual desktops can be utilized to provide students with access to a consistent and secure computing environment, allowing them to complete coursework and practice coding without needing to install software or worry about hardware limitations. . | This was the farthest I got too, there were some problems trying to create an account. . | . AWS Database Hacks . Quiz 1 . Q1: What is the main difference between relational and non-relational databases? . Correct - C. Relational databases are based on tables and use SQL, while non-relational databases are based on collections and use JSON-like documents. . Q2: Which AWS database service is best suited for applications that require low-latency speed? . Correct - A. Amazon ElastiCache . Q3: What is the purpose of the code example provided in the lesson? . Correct - C. To provide an example of how to connect to a database instance in RDS using Python. . Quiz 2 . Q1: Which of the following is not an AWS database option? . Correct - C. SQLite . Q2: Which of the following is a file-based, lightweight RDBMS? . Correct - D. SQLite . Q3: Which AWS service enables you to store and query highly connected datasets? . Correct - C. Amazon Neptune . Duck DNS and AWS Hacks . . . | Duck DNS is an essential part of the internet infrastructure that translates human-readable domain names like www.khalidfarah.com into IP addresses that computers can understand. We use DNS to access websites, send emails, and connect to other online services. DNS allows us to remember domain names easily and eliminates the need to remember IP addresses. . | DuckDNS is a free dynamic DNS service that allows users to assign a custom domain name to their public IP address, making it easier to access their home network devices remotely. DuckDNS works by running a client script on a device connected to the network that periodically sends the current IP address to DuckDNS servers, which then update the DNS record with the new IP address. DuckDNS is unique in that it does not require users to register or provide any personal information to use the service, and it supports multiple subdomains per account. . DuckDNS is useful for our projects because it enables us to access our home network devices remotely without having to remember the IP address or perform complex configurations. We can use DuckDNS to access our Raspberry Pi servers, cameras, and other IoT devices securely and conveniently from anywhere in the world. . Here is how you set up Duck DNS in a few steps . Go to the DuckDNS website and sign up for an account. | Choose a custom subdomain name for your account. | Install the DuckDNS client script on a device connected to your network. | Configure the client script to run periodically and send the current IP address to the DuckDNS servers. | Update your router’s port forwarding settings to forward traffic to the appropriate device on your network. | Test your setup by accessing your custom domain name from a remote location. | 4 . I did not do deployment for my Group last tri, but I think it’s important to regularly update Nginx and Docker versions to ensure that security vulnerabilities are addressed, and to verify that any existing configurations are still compatible with newer versions. It’s also important to ensure that any dependencies or external services used by the deployment are up-to-date and compatible with the latest versions. | . 5. . 6. . CERTBOT Hacks . It says that I didn’t install CERTBOT, but I went through each step, so idk, but I attempted it. | . 2 . OpenSSL and LibreSSL are both popular open-source cryptographic libraries used for secure communication on the Internet. While both libraries share many similarities in their security features, there are some differences between the two. OpenSSL is a widely used library that supports a variety of cryptographic algorithms, including SSL/TLS protocols, PKI, and cryptographic hashing. It also provides a comprehensive set of features for secure communication, such as support for hardware acceleration, session resumption, and perfect forward secrecy. OpenSSL has been the subject of various security vulnerabilities over the years, including Heartbleed, DROWN, and more recently, the “ChaCha20-Poly1305 zero-length padding” vulnerability. both OpenSSL and LibreSSL provide a wide range of security features for secure communication on the Internet. However, LibreSSL has been developed with a focus on security and simplicity, and it has improved on some of the vulnerabilities present in OpenSSL. While both libraries may still be vulnerable to future security issues, it’s important to keep them updated to their latest versions to ensure maximum security. .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/04/25/DevOpsHacks.html",
            "relUrl": "/fastpages/markdown/2023/04/25/DevOpsHacks.html",
            "date": " • Apr 25, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "2018 Practice Exam MCQ",
            "content": "I Scored 61/66 . . Q11 . . The correct statement is D: The code segment simulates a spinner in which selecting each of three sections is equally likely. | . Q23 . . The correct statement is B: There are multiple paths from P to S (for example, P to S and P to Q to S). | . Q46 . . The correct statement is D: It is not possible to create an algorithm to solve an undecidable problem for all programs and inputs. | . Q64 . . The correct statement is B and C: Cloud computing sites must consider security concerns in order to protect their users’ private data. | . Q66 . . The correct statement is C and D: For the list open bracket, 10, 20, 30, 40, close bracket, there are no values less than the first number in the list, so the procedure returns the correct value 1 0. . | Reflection . I feel like I understand 2018 Practice Exam MCQ content from what is shown from my test score and after learning about it for the whole year. | . | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/04/16/testmcq.html",
            "relUrl": "/fastpages/markdown/2023/04/16/testmcq.html",
            "date": " • Apr 16, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "CPT Write Up",
            "content": "CPT Write Up . 3a . 3.a.i.: The Overall purpose of the program is to have a website where people can click on and find cars to rent that is user friendly and easy to use. | 3.a.ii.: In the video, it shows a table that has ten different cars that are shown so anyone can rent these cars and there is a feature to where you can add a car to the database and also you can reserve a car from the home page which is my page. | 3.a.iii.: There are a few inputs that is used in my feature which include a spot to add a new car to the database, and where you can click a button which will take you to the section to reserve the car.The output feature is when the car is added to database and when it takes you to reserve the car or see the selection of cars. | . 3b . 3.b.i.: | 3.b.ii.: | 3.b.iii.: I am fetching from an api which loads the table full of cars. | 3.b.iv.: The data that is represented in my program is the names and year and model of each car that we have up for rental on hour homepage which is shown in a table that is fetching from an api. | 3.b.v.: Using the array of car from the list and that its fecthing from an api makes the program alot more user friendly and save times and runs smoother because you don’t have to manualy input each car and their features. The api does that from fetching and is shown in a table. | . 3c . 3.c.i.: | 3.c.ii.: | 3.c.iii.: This part of the code is where the data is coming from and how the data is shown on the website and is fetching into a table that is shown on the website. | 3.c.iv.: his piece of code is created from using the fetch feature whic is being pulled from an api using the api key code. Then you need the part where, if the data is being fetched right, then the data will be shown in a table on the website. | . 3d . 3.d.i.: i. First call: The first call of fetch is the way the api is being shown on the webiste in a table | ii. Second call: The second call of fetch is when the data is being pulled from the api, then if there is an error, it will display “ failed to fetch data “. | . | 3.d.ii.: i. The first call is testing if there is no problem fetching and then fetchs data from api | ii. The second tests if the fetch feature works, then data will be shown on website in table. | . | 3.d.iii.: i. The result is a list of array that has all car in it. | ii. The result is a list with table displaying all the cars. | . | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/04/16/CPTwriteup.html",
            "relUrl": "/fastpages/markdown/2023/04/16/CPTwriteup.html",
            "date": " • Apr 16, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Computers and Networks (Unit 4)",
            "content": "Requirements . Work through College Board Unit 4… blog, add definitions, and pictures. Be creative, for instance make a story of Computing and Networks that is related to your PBL experiences this year. . How a Computer Works . As we have learned, a computer needs aa program to do something smart. The sequence of a program initiates a series of actions with the computers Central Processing Unit (CPU). This component is essentially a binary machine focussing on program instructions provided. The CPU retrieives and stores the data it acts upon in Random Access Memory (RAM). Between the CPU, RAM, and Storage Devices a computer can work with many programs and large amounts of data. . List specification of your Computer, or Computers if working as Pair/Trio . Processor GHz: 11th Gen Intel : @2.80 GHZ | Memory in GB: 12.0 GB | Storage in GB: 475 GB | OS: 64-bit operating system, x64-based processor | . Define or describe usage of Computer using Computer Programs. Pictures are preferred over a lot of text. Use your experience. . Input devices - hardware components or peripherals that are used to input data or commands into a computer system. Examples of input devices include keyboards, mice, scanners, digital cameras, and microphones. | Output devices - hardware components or peripherals that are used to display or output information from a computer system. Examples of output devices include monitors, printers, speakers, and projectors. | Program File - contains executable code written in a programming language. Program files typically have a file extension that corresponds to the programming language used to write them. | Program Code - set of instructions written in a programming language that tells a computer what to do. Program code can be compiled or interpreted, and it can be written in a variety of programming languages, such as C++, Java, Python, and more. | Processes - programs or applications that are currently running on a computer system. A process can be thought of as an instance of a program that is currently executing in memory. | Ports - connection points on a computer or other electronic device that allow for the transfer of data between the device and other devices. Ports can be physical, such as USB or HDMI ports | Data File - contains data or information that can be accessed by a computer program. Data files can be created in a variety of formats, such as text, binary, or image formats. | Inspect Running Code - running code refers to the process of examining the code that is currently executing on a computer system.refers to the process of examining the values of variables in a program or application. | Inspect Variables - refers to the process of examining the values of variables in a program or application. This can be done using debugging tools or by examining the code itself. Variables are used to store data or information that is used by a program during its execution. | . . The Internet . Watch/review College Board Daily Video for 4.1.1 . Essential Knowledge A computing device is a physical artifact that can run a program. Some examples include computers, tablets, servers, routers, and smart sensors. | A computing system is a group of computing devices and programs working together for a common purpose. | A computer network is a group of interconnected computing devices capable of sending or receiving data. | A computer network is a type of computing system. | A path between two computing devices on a computer network (a sender and a receiver) is a sequence of directly connected computing devices that begins at the sender and ends at the receiver. | Routing is the process of finding a path from sender to receiver. | The bandwidth of a computer network is the maximum amount of data that can be sent in a fixed amount of time. | Bandwidth is usually measured in bits per second | . | Complete Vocabulary Matching Activity. Incorporate this into your learnings from year. To analyze measure path and latency use traceroute and ping commands from Linux Terminal. Path - A | Route - C | Computer System - B | Computer Device - C | Bandwidth - D | Computer Network - F | . | . Watch/review College Board Daily Video 4.1.2 . Complete True of False Questions . | T . | F . | F . | T . | F . | F . | T . | Essential Knowledge The internet is a computer network consisting of interconnected networks that use standardized, open (nonproprierary) communication protocols. | Access to the internet depends on the ability to connect a computing device to an internet connected device. | A protocol is an agreed-upon set of rules that specify the behavior of a system. | The protocols used in the internet are open, which allows users to easily connect additional computing devices to the internet. | Routing on the internet is usually dynamic; it is not specified in advance | The scalability of a system is the capacity for the system to change in size and scale to meet new demands. | The internet was designed to be scalable | Information is passed through the internet as a data stream. Data streams contain chunks of data, which are encapsulated in packets. | Packets contain a chunk of data and metadata used for routing the packet between the origin and the destination on the internet, as well as for data reassembly. | Packets may arrive at the destination in order, out of order, or not at all | IP, TCP and UDP are common protocols used on the internet. | The world wide web is a system of linked pages, programs, and files. | HTTP is a protocol used by the world wide web | The world wide web uses the internet | . | Go over AP videos, vocabulary, and essential knowledge. Draw a diagram showing the internet and its many levels. A preferred diagram would using your knowledge of frontend, backend, deployment, etc. Picture would highligh vocabulary by illustration. The below illustration have some ideas | . . Often we draw pictures of machines communicating over the Internet with arrows. However, the real communication goes through protocol layers and the machine and then is trasported of the network. For College Board and future Computer Knowledge you should become familiar with the following … | . . User Machine &lt;&gt; Frontend Server &lt;&gt; Backend Server +--+ +--+ +--+ | Browser | | GH Page | | Flask | +--+ ^ +--+ ^ +--+ | HTTP | | | HTTP | | | HTTP | +--+ | +--+ | +--+ | TCP | | | TCP | | | TCP | +--+ | +--+ | +--+ | IP | V | IP | V | IP | +--+ +--+ +--+ | Network | &lt;&gt; | Network | &lt;&gt; | Network | +--+ +--+ +--+ . The “http” layer is an application layer protocol in the TCP/IP stack, used for communication between web browsers and web servers. It is the protocol used for transmitting data over the World Wide Web. . The “transport” layer (TCP) is responsible for providing reliable data transfer between applications running on different hosts. The TCP protocol segments the data into smaller chunks called “segments”. Each segment contains a sequence number that identifies its position in the original stream of data, as well as other control information such as source and destination port numbers, and checksums for error detection. . The “ip” layer is responsible for packetizing data received from the TCP layer of the protocol stack, and then encapsulating the data into IP packets. The IP packets are then sent to the lower layers of the protocol stack for transmission over the network. . The “network” layer is responsible for routing data packets between networks using the Internet Protocol (IP). This layer handles tasks such as packet addressing and routing, fragmentation and reassembly, and network congestion control. . Fault Tolerance . Watch both Daily videos for 4.2 . Complete the network activity, summarize your understanding of fault tolerance. . | Fault tolerance is the ability of a system or component to continue functioning in the event of a fault or failure. This means that if a component or part of a system fails, the system as a whole can continue to operate without interruption . | . Parallel and Distributed Computing . Review previous lecture on Parallel Computing and watch Daily vidoe 4.3. Think of ways to make something in you team project to utilize Cores more effectively. Here are some thoughts to add to your story of Computers and Networks… . What is naturally Distributed in Frontend/Backend archeticture? . | Distributed architectures like frontend/backend are often used in modern web applications to provide scalability, flexibility, and modularity. . | Analyze this command in Docker: ENV GUNICORN_CMD_ARGS=&quot;--workers=1 --bind=0.0.0.0:8086&quot;. Determine if there is options are options in this command for parallel computing within the server that runs python/gunicorn. Here is an article . | This environment variable is used to pass additional command-line arguments to the Gunicorn web server when it starts up. Specifically, the “–workers=1” argument specifies that Gunicorn should start only one worker process, while the “–bind=0.0.0.0:8086” argument specifies that the web server should listen on all available network interfaces on port 8086. . | . Last week we discussed parallel computing on local machine. There are many options. Here is something to get parallel computing work with a tool called Ray. . Review this article… Can you get parallel code on images to work more effectively? I have not tried Ray. | . Code example from ChatGPT using squares. This might be more interesting if nums we generated to be a lot bigger. | . import ray # define a simple function that takes a number and returns its square def square(x): return x * x # initialize Ray ray.init() # create a remote function that squares a list of numbers in parallel @ray.remote def square_list(nums): return [square(num) for num in nums] # define a list of numbers to square nums = [1, 2, 3, 4, 5] # split the list into two parts split_idx = len(nums) // 2 part1, part2 = nums[:split_idx], nums[split_idx:] # call the remote function in parallel on the two parts part1_result = square_list.remote(part1) part2_result = square_list.remote(part2) # get the results and combine them result = ray.get(part1_result) + ray.get(part2_result) # print the result print(result) .",
            "url": "https://eligilmour.github.io/Eli-1/2023/04/05/AP_computers_networks.html",
            "relUrl": "/2023/04/05/AP_computers_networks.html",
            "date": " • Apr 5, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "Parallel Computing Hacks",
            "content": "Example 1 . When two of the processes are running in parallel in this example it will take 50 seconds to run. This is because Y and Z are going to run in parallel. Both the processors would be running at the same time so the one that takes forty second will stop and the whole entire process will stop after 50 seconds . Example 2 . If we run them in parallel they will run at the same time so the longer process will be the execution time which will be 45 seconds. 70-25= 45 seconds. Running them one after another is adding them together which would be 25+45 which is 70. . Example 1 . When two of the processes are running in parallel in this example it will take 50 seconds to run. This is because Y and Z are going to run in parallel. Both the processors would be running at the same time so the one that takes forty second will stop and the whole entire process will stop after 50 seconds . Example 2 . If we run them in parallel they will run at the same time so the longer process will be the execution time which will be 45 seconds. 70-25= 45 seconds. Running them one after another is adding them together which would be 25+45 which is 70. . Here is my List about foods that start with the letter H | . foods = [&quot;apple&quot;, &quot;banana&quot;, &quot;hamburger&quot;, &quot;cookie&quot;, &quot;honeydew&quot;, &quot;corn&quot;, &quot;ham&quot;, &quot;heirloom tomato&quot;, &quot;hot dog&quot;] h_foods = [food.title() if len(food) &gt; 5 else food for food in foods if food.lower().startswith(&quot;h&quot;)] print(h_foods) . [&#39;Hamburger&#39;, &#39;Honeydew&#39;, &#39;ham&#39;, &#39;Heirloom Tomato&#39;, &#39;Hot Dog&#39;] .",
            "url": "https://eligilmour.github.io/Eli-1/javascript/markdown/2023/04/02/parellel.html",
            "relUrl": "/javascript/markdown/2023/04/02/parellel.html",
            "date": " • Apr 2, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "MCQ Test 4 Corrections",
            "content": "I Scored 47/50 . . Q26 . . The correct statement is “D: There are trade-offs involved in choosing a compression technique for storing and transmitting data.” This statement is accurate, as different compression techniques may have different levels of compression, processing speed, and compatibility with different file formats | . Q32 . . option C is incorrect. The current score in a game is likely to change often (statement II). . Q50 . . Algorithm I does not work correctly. In algorithm I, if two people are tied for the earliest birthday, they both sit down when they are eventually paired. Algorithm II works correctly. Because algorithm II allows both people to remain standing when there is a tie, a person with the earliest birthday is not eliminated. Algorithm II continues until all remaining people have the same birthday, which is the earliest birthday. . Reflection . I feel like I understand MCQ test 4 content from what is shown from my test score and after learning about it. | . | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/04/02/MCQ.html",
            "relUrl": "/fastpages/markdown/2023/04/02/MCQ.html",
            "date": " • Apr 2, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "Title",
            "content": "",
            "url": "https://eligilmour.github.io/Eli-1/2023/03/29/album.html",
            "relUrl": "/2023/03/29/album.html",
            "date": " • Mar 29, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "Extra Credit Notes",
            "content": "Cal State Grad | Her grades didn’t define her | Applied physics | He is a comp sci major and grad | 6 years to get a bachelor degree(no gap year) | Cal state built in 1989 | 2017- 2022 she was there | The school is national leader in social mobility | Many Job Opportunities when graduating | Computer engineering starting this fall | Joining clubs are important when being an undergrad | Go to campus events and network to get internships | Check student emails and usually offer great opportunities | There are two types of ways to pay for college: Scholarships and grants | Subsidized loans | unsubidized loans | . | Cougar blue day event coming up for freshman. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/03/28/extra-credit.html",
            "relUrl": "/fastpages/markdown/2023/03/28/extra-credit.html",
            "date": " • Mar 28, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "Space Hacks",
            "content": "Hacks . Why do you think a programmer should care about space and time complexity? A programmer should care about space and time complexity because this is what creates and what is shown on your website and like for example, the bigger the image the more space it takes up. | . | Do you think this is a time complexity or space complexity or both problem? This is a time and spcae problem because the bigger the photo, the longer it will take to load / process. If it is too big then there is not space for photo. You increase the bandwidth to increase the time. Small photo loads very fast while larger photo takes longer. | Record your findings when testing the time elapsed of the different algorithms. | Although we will go more in depth later, time complexity is a key concept that relates to the different sorting algorithms. Do some basic research on the different types of sorting algorithms and their time complexity. | . | Answer: Bubble Sort: Bubble sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order. | . Selection Sort: Selection sort is another simple sorting algorithm that sorts an array by repeatedly finding the minimum element from unsorted part and putting it at the beginning. . Insertion Sort: Insertion sort is a simple sorting algorithm that builds the final sorted array one item at a time. It is much less efficient on large lists than other sorting algorithms such as quicksort, heapsort, or merge sort. . Why is time and space complexity important when choosing an algorithm? . | Answer: time and space complexity are important considerations when choosing an algorithm because they directly impact the performance and efficiency of your program, and can affect scalability and resource constraints. . | Should you always use a constant time algorithm / Should you never use an exponential time algorithm? Explain? . | No, you should not always use a constant time algorithm, nor should you never use an exponential time algorithm. The choice of algorithm depends on the specific requirements and constraints of the problem you are trying to solve. . | What are some general patterns that you noticed to determine each algorithm’s time and space complexity? . | Counting basic operations: One common method for analyzing an algorithm’s time complexity is to count the number of basic operations it performs, such as arithmetic operations, comparisons, and assignments. This approach works well for simple algorithms where each operation takes roughly the same amount of time. . | . Big O notation: Big O notation is a mathematical notation that describes the upper bound of an algorithm’s time complexity in terms of the input size. It provides a way to express the algorithm’s growth rate and allows for easy comparison of different algorithms. For example, an algorithm with O(n) time complexity means that its runtime grows linearly with the input size. . Complete the Time and Space Complexity analysis questions linked below. Practice .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/03/27/hacks.html",
            "relUrl": "/fastpages/markdown/2023/03/27/hacks.html",
            "date": " • Mar 27, 2023"
        }
        
    
  
    
        ,"post16": {
            "title": "Big Idea 2 Quiz Corrections",
            "content": "I scored 24/25 | . . Question 20 | . . My answer = (avgRating ≥ 4.0) OR ((prcRange = “lo”) AND (prcRange = “med”)) . | Correct Answer = (avgRating ≥ 4.0) AND ((prcRange = “lo”) OR (prcRange = “med”)) . | Notes: This expression evaluates to true only for restaurants with the correct price range (when prcRange equals “lo” or “med”) and the correct customer rating (when avgRating ≥ 4.0). . | Reflection . I feel like I understand Big idea 2 from what is shown from my test score and after learning about it for the past few weeks. | . | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/03/21/big2quiz.html",
            "relUrl": "/fastpages/markdown/2023/03/21/big2quiz.html",
            "date": " • Mar 21, 2023"
        }
        
    
  
    
        ,"post17": {
            "title": "Unit 2.4b Using Programs with Data, SQL",
            "content": "Database Programming is Program with Data . The Tri 2 Final Project is an example of a Program with Data. . Prepare to use SQLite in common Imperative Technique . Explore SQLite Connect object to establish database connection- Explore SQLite Cursor Object to fetch data from a table within a database | . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource- What is a database schema? . What is the purpose of identity Column in SQL database? | What is the purpose of a primary key in SQL database? | What are the Data Types in SQL table? | . import sqlite3 database = &#39;instance/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;users&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() schema() . (0, &#39;id&#39;, &#39;INTEGER&#39;, 1, None, 1) (1, &#39;_name&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (2, &#39;_uid&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (3, &#39;_password&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (4, &#39;_dob&#39;, &#39;DATE&#39;, 0, None, 0) . Reading Users table in Sqlite.db . Uses SQL SELECT statement to read data . What is a connection object? After you google it, what do you think it does? | Same for cursor object? | Look at conn object and cursor object in VSCode debugger. What attributes are in the object? | Is &quot;results&quot; an object? How do you know? | . import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM users&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() read() . (3, &#39;Alexander Graham Bell&#39;, &#39;lex&#39;, &#39;sha256$pNul89jtm3NGmxf8$eb7675fe5bb6d7f2716f9e885e69d023d975949d15de7108022b2ed7768c7e99&#39;, &#39;2023-03-17&#39;) (4, &#39;Eli Whitney&#39;, &#39;whit&#39;, &#39;sha256$xGUztNnMJEy5arKg$8dae352c493f064da03af55602d3806581a0581db90412218dc0ee45ca7d50c5&#39;, &#39;2023-03-17&#39;) (5, &#39;Indiana Jones&#39;, &#39;indi&#39;, &#39;sha256$BHmWiQ7bTzkAsqRc$80648850edb06b9385a71748a7447f3941d1ef89f94127f60b808915e4827cb9&#39;, &#39;1920-10-21&#39;) (6, &#39;eli&#39;, &#39;eli200191&#39;, &#39;1234&#39;, &#39;2009-08-02&#39;) . Create a new User in table in Sqlite.db . Uses SQL INSERT to add row . Compare create() in both SQL lessons. What is better or worse in the two implementations? | Answer = both compare and create are better in this situation. | Explain purpose of SQL INSERT. Is this the same as User init? | Answer = The purpose of SQL INSERT is to add new records or data into a table in a relational database management system. The INSERT statement is used to specify the table name, the columns in the table to which data will be added, and the values to be added to each column. | . import sqlite3 def create(): name = input(&quot;Enter your name:&quot;) uid = input(&quot;Enter your user id:&quot;) password = input(&quot;Enter your password&quot;) dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO users (_name, _uid, _password, _dob) VALUES (?, ?, ?, ?)&quot;, (name, uid, password, dob)) # Commit the changes to the database conn.commit() print(f&quot;A new user record {uid} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #create() . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . What does the hacked part do? | Explain try/except, when would except occur? | What code seems to be repeated in each of these examples to point, why is it repeated? | . import sqlite3 def update(): uid = input(&quot;Enter user id to update&quot;) password = input(&quot;Enter updated password&quot;) if len(password) &lt; 2: message = &quot;hacked&quot; password = &#39;gothackednewpassword123&#39; else: message = &quot;successfully updated&quot; # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE users SET _password = ? WHERE _uid = ?&quot;, (password, uid)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: print(f&quot;The row with user id {uid} the password has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #update() . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why? | Answer = yes, The reason for this is that when you issue a DELETE command, you are instructing the system to permanently remove data from the database. If this command is executed incorrectly. | What is the &quot;f&quot; and {uid} do? | Answer = in some programming languages, &quot;f&quot; is a shorthand for the keyword &quot;function&quot;, which is used to define a reusable block of code. Meanwhile, {uid} could be a placeholder for a unique identifier, such as a user ID or session ID | . import sqlite3 def delete(): uid = input(&quot;Enter user id to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM users WHERE _uid = ?&quot;, (uid,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with uid {uid} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #delete() . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat? | Becaucse there is an elif operation for each of teh create, read, update, delete. | Could you refactor this menu? Make it work with a List? | No you can not because | . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . The row with uid indi was successfully deleted The row with uid whit was successfully deleted The row with uid lex was successfully deleted A new user record c has been created A new user record 1111 has been created . import sqlite3 from sqlite3 import Error def create_connection(db_file): &quot;&quot;&quot; create a database connection to the SQLite database specified by db_file :param db_file: database file :return: Connection object or None &quot;&quot;&quot; conn = None try: conn = sqlite3.connect(db_file) return conn except Error as e: print(e) return conn def create_table(conn, create_table_sql): &quot;&quot;&quot; create a table from the create_table_sql statement :param conn: Connection object :param create_table_sql: a CREATE TABLE statement :return: &quot;&quot;&quot; try: c = conn.cursor() c.execute(create_table_sql) except Error as e: print(e) def main(): database = r&quot;C: sqlite db instancesqlite.db&quot; sql_create_projects_table = &quot;&quot;&quot; CREATE TABLE IF NOT EXISTS projects ( id integer PRIMARY KEY, name text NOT NULL, begin_date text, end_date text ); &quot;&quot;&quot; sql_create_tasks_table = &quot;&quot;&quot;CREATE TABLE IF NOT EXISTS tasks ( id integer PRIMARY KEY, name text NOT NULL, priority integer, status_id integer NOT NULL, project_id integer NOT NULL, begin_date text NOT NULL, end_date text NOT NULL, FOREIGN KEY (project_id) REFERENCES projects (id) );&quot;&quot;&quot; # create a database connection conn = create_connection(database) # create tables if conn is not None: # create projects table create_table(conn, sql_create_projects_table) # create tasks table create_table(conn, sql_create_tasks_table) else: print(&quot;Error! cannot create the database connection.&quot;) if __name__ == &#39;__main__&#39;: main() . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Create a new Table or do something new, sqlite documentation | In implementation in previous bullet, do you see procedural abstraction? | .",
            "url": "https://eligilmour.github.io/Eli-1/2023/03/16/AP-unit2-4b.html",
            "relUrl": "/2023/03/16/AP-unit2-4b.html",
            "date": " • Mar 16, 2023"
        }
        
    
  
    
        ,"post18": {
            "title": "Notes",
            "content": "The code defines a class Image_Data and several functions that allow creating objects from images, scaling them, and displaying them in Jupyter Notebook. | . The Image_Data class takes in several parameters to create an object that represents an image file. It opens the file using PIL and scales it to a base width of 320 pixels. It also converts the image into an HTML format that can be displayed in a Jupyter Notebook. There are two properties html and html_grey that return HTML code to display the image and its gray-scale version. . The image_data() function returns a tuple with a path and a list of images. The default path is set to images/ and the default list includes several images. . The image_objects() function creates a list of Image_Data objects from the list of images returned by image_data(). The list of objects can be used to display the images. . The code includes a block that demonstrates how to display the images in Jupyter Notebook. It loops through the list of Image_Data objects and displays the image along with some metadata. It first displays the original image and then displays a gray-scale version. . Overall, this code allows creating objects from images and displaying them in a Jupyter Notebook. It provides a convenient way to work with images and analyze them. .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/03/13/notes.html",
            "relUrl": "/fastpages/markdown/2023/03/13/notes.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post19": {
            "title": "Unit 2.4a Using Programs with Data, SQLAlchemy",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? | . Flask app object | SQLAlchemy object | &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///sqlite.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class | class User purpose | db.Model inheritance | init method | @property, @.setter&lt;/li&gt; additional methods | &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class User(db.Model): __tablename__ = &#39;users&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _uid = db.Column(db.String(255), unique=True, nullable=False) _password = db.Column(db.String(255), unique=False, nullable=False) _dob = db.Column(db.Date) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password=&quot;123qwerty&quot;, dob=datetime.today()): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # dob property is returned as string, to avoid unfriendly outcomes @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob should be have verification for type date @dob.setter def dob(self, dob): if isinstance(dob, str): # not a date type dob = date=datetime.today() self._dob = dob @property def age(self): today = datetime.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # output content using str(object) in human readable form, uses getter # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;uid&quot;: self.uid, &quot;dob&quot;: self.dob, &quot;age&quot;: self.age, } # CRUD update: updates user name, password, phone # returns self def update(self, name=&quot;&quot;, uid=&quot;&quot;, password=&quot;&quot;): &quot;&quot;&quot;only updates values with length&quot;&quot;&quot; if len(name) &gt; 0: self.name = name if len(uid) &gt; 0: self.uid = uid if len(password) &gt; 0: self.set_password(password) db.session.commit() return self # CRUD delete: remove self # None def delete(self): db.session.delete(self) db.session.commit() return None . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? | . Create All Tables from db Object | User Object Constructors | Try / Except | &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=datetime(1847, 2, 11)) u2 = User(name=&#39;Nikola Tesla&#39;, uid=&#39;niko&#39;, password=&#39;123niko&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;whit&#39;, password=&#39;123whit&#39;) u5 = User(name=&#39;Indiana Jones&#39;, uid=&#39;indi&#39;, dob=datetime(1920, 10, 21)) u6 = User(name=&#39;Marion Ravenwood&#39;, uid=&#39;raven&#39;, dob=datetime(1921, 10, 21)) users = [u1, u2, u3, u4, u5, u6] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for user in users: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = user.create() print(f&quot;Created new uid {object.uid}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {user.uid}, or error.&quot;) initUsers() . NameError Traceback (most recent call last) /home/eli/Eli-1/_notebooks/2023-03-13-AP-unit2-4a.ipynb Cell 8 in &lt;cell line: 30&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/Eli-1/_notebooks/2023-03-13-AP-unit2-4a.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=26&#39;&gt;27&lt;/a&gt; &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/Eli-1/_notebooks/2023-03-13-AP-unit2-4a.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=27&#39;&gt;28&lt;/a&gt; print(f&#34;Records exist uid {user.uid}, or error.&#34;) &gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/Eli-1/_notebooks/2023-03-13-AP-unit2-4a.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=29&#39;&gt;30&lt;/a&gt; initUsers() /home/eli/Eli-1/_notebooks/2023-03-13-AP-unit2-4a.ipynb Cell 8 in initUsers() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/Eli-1/_notebooks/2023-03-13-AP-unit2-4a.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; db.create_all() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/Eli-1/_notebooks/2023-03-13-AP-unit2-4a.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; &#34;&#34;&#34;Tester data for table&#34;&#34;&#34; &gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/Eli-1/_notebooks/2023-03-13-AP-unit2-4a.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=date(1847, 2, 11)) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/Eli-1/_notebooks/2023-03-13-AP-unit2-4a.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; u2 = User(name=&#39;Nikola Tesla&#39;, uid=&#39;niko&#39;, password=&#39;123niko&#39;) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/Eli-1/_notebooks/2023-03-13-AP-unit2-4a.ipynb#X10sdnNjb2RlLXJlbW90ZQ%3D%3D?line=11&#39;&gt;12&lt;/a&gt; u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) NameError: name &#39;date&#39; is not defined . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following | . User.query.filter_by | user.password | def find_by_uid(uid): with app.app_context(): user = User.query.filter_by(_uid=uid).first() return user # returns user object # Check credentials by finding user and verify password def check_credentials(uid, password): # query email and return user record user = find_by_uid(uid) if user == None: return False if (user.is_password(password)): return True return False #check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following | . user.find_by_uid() and try/except | user = User(...) | user.dob and try/except | user.create() and try/except | def create(): # optimize user time to see if uid exists uid = input(&quot;Enter your user id:&quot;) user = find_by_uid(uid) try: print(&quot;Found n&quot;, user.read()) return except: pass # keep going # request value that ensure creating valid object name = input(&quot;Enter your name:&quot;) password = input(&quot;Enter your password&quot;) # Initialize User object before date user = User(name=name, uid=uid, password=password ) # create user.dob, fail with today as dob dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) try: user.dob = datetime.strptime(dob, &#39;%Y-%m-%d&#39;).date() except ValueError: user.dob = datetime.today() print(f&quot;Invalid date {dob} require YYYY-mm-dd, date defaulted to {user.dbo}&quot;) # write object to database with app.app_context(): try: object = user.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error uid {uid}&quot;) create() . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following | . User.query.all | json_ready assignment | # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = User.query.all() json_ready = [user.read() for user in table] # each user adds user.read() to list return json_ready read() . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Add Update functionality to this blog. | Add Delete functionality to this blog. | . &lt;/div&gt; | .",
            "url": "https://eligilmour.github.io/Eli-1/2023/03/13/AP-unit2-4a.html",
            "relUrl": "/2023/03/13/AP-unit2-4a.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post20": {
            "title": "AP Prep 2.3",
            "content": "Practice Problem . . Prefix meta behind, among, between | metadata - data about data | . | Some data has information about itself Author | Date | Length/size | . | . . Data - Book/Document Author | Title | Genre | Date of publication | Length | . | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/03/12/apprep2.3.html",
            "relUrl": "/fastpages/markdown/2023/03/12/apprep2.3.html",
            "date": " • Mar 12, 2023"
        }
        
    
  
    
        ,"post21": {
            "title": "AP Prep 2.2",
            "content": "Practice Problem . . Original = 142 bytes | Compressed = 80 bytes | Dictionary = 31 bytes | Compression = 21.83% | . . The photo shows lossy data compression because the photo quality in the background keeps getting worse quality and soon becomes very hard to see the background. | . . This is a lossless data compression because it uses an algorithm to shrink the image without losing any important data. | . Quiz . . .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/03/12/apprep2.2.html",
            "relUrl": "/fastpages/markdown/2023/03/12/apprep2.2.html",
            "date": " • Mar 12, 2023"
        }
        
    
  
    
        ,"post22": {
            "title": "MCQ 3 Test Corrections",
            "content": "I scored 36/50 | . . This option is incorrect. A user’s email address is required to receive email from other people. An email address in itself does not contain any extra information about the user. | . . Incorrect. The upgraded system selects the appropriate department based on the customer’s issue, so the customer does not have the ability to make an incorrect selection. | . . This option is incorrect. Each item in inputList1 is checked to see if it appears in inputList2. If the item appears in inputList2, the item is appended to resultList. Items that appear in both lists are the only items that appear in resultList. | . . This option is incorrect. The program does not work as intended. On the test case [9, 1, 4, 5], the program displays 28 but the correct sum is 19. | . . This option is incorrect. Since “Diane” is not in nameList, the procedure will display 0, indicating that the procedure worked as intended. | . . Incorrect. With this algorithm, it is possible that the same student will be selected twice instead of 2 different students being selected. | . . Correct. To remove the first 2 characters of oldString, this code segment takes a substring starting at position 3. To remove the last 2 characters of oldString, the substring ends at the position that is 4 characters less than the length of oldString (since 4 characters are removed). | . . Incorrect. This code segment leaves the robot four rows above its starting position and two rows above the gray square. | . . Incorrect. The robot fails to rotate left after the first block of 3 moves forward and then fails to rotate right after the following block of 2 moves forward. | . . Incorrect. After moving forward two squares, turning right, and moving forward four squares, if the robot were to turn right, then the next move forward would put the robot into the black region of the grid. | . . Incorrect. In proc2, the call to proc1 occurs before the DISPLAY statement, so “to you” and “happy” are displayed before “birthday”. | . . Incorrect. The printArgs procedure displays the value of num, then str, then num, rather than str, then num, then str. In addition, the first call to printArgs displays two asterisks, not one. The second call to printArgs displays one asterisk, not two. | . . Incorrect. A simulation is often used when a real-world scenario is too impractical to test. A benefit of using a simulation is that it allows for rapid testing. | . . Incorrect. As the size of the list grows, the number of steps needed to sort the list grows at an exponential rate, as the number of steps is equal to 2n for a list of size n This indicates that the algorithm does not run in a reasonable amount of time. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/03/10/testcorrection3.html",
            "relUrl": "/fastpages/markdown/2023/03/10/testcorrection3.html",
            "date": " • Mar 10, 2023"
        }
        
    
  
    
        ,"post23": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Files To Get . Save this file to your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2023-03-09-AP-unit2-3.ipynb . Save these files into a subfolder named files in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/data.csv . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/grade.json . Save this image into a subfolder named images in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/images/table_dataframe.png . Pandas and DataFrames . In this lesson we will be exploring data analysis using Pandas. . College Board talks about ideas like Tools. &quot;the ability to process data depends on users capabilities and their tools&quot; | Combining Data. &quot;combine county data sets&quot; | Status on Data&quot;determining the artist with the greatest attendance during a particular month&quot; | Data poses challenge. &quot;the need to clean data&quot;, &quot;incomplete data&quot; | . | . From Pandas Overview -- When working with tabular data, such as data stored in spreadsheets or databases, pandas is the right tool for you. pandas will help you to explore, clean, and process your data. In pandas, a data table is called a DataFrame. | . . &#39;&#39;&#39;Pandas is used to gather data sets through its DataFrames implementation&#39;&#39;&#39; import pandas as pd . Cleaning Data . When looking at a data set, check to see what data needs to be cleaned. Examples include: . Missing Data Points | Invalid Data | Inaccurate Data | . Run the following code to see what needs to be cleaned . df = pd.read_json(&#39;files/grade.json&#39;) print(df) # What part of the data set needs to be cleaned? # From PBL learning, what is a good time to clean data? Hint, remember Garbage in, Garbage out? . Types Of Lemonade Price Name 0 Lemon $1.79 Jake 1 Strawberry $2.19 larry 2 Rootbeer $3.01 harry 3 Mango $1.49 trent 4 Sparkling $5.00 ava 5 Lavender $1.12 lesha 6 Frozen $3.79 bella 7 Peach $4.00 sarah 8 Blueberry $3.02 Khalid 9 Carrot $5.01 Caleb 10 Mint $2.29 ben 11 Vanilla $4.31 Hao . Extracting Info . Take a look at some features that the Pandas library has that extracts info from the dataset . DataFrame Extract Column . print(df[[&#39;Name&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;Price&#39;,&#39;Name&#39;]].to_string(index=False)) . Name 0 Jake 1 larry 2 harry 3 trent 4 ava 5 lesha 6 bella 7 sarah 8 Khalid 9 Caleb 10 ben 11 Hao Price Name $1.79 Jake $2.19 larry $3.01 harry $1.49 trent $5.00 ava $1.12 lesha $3.79 bella $4.00 sarah $3.02 Khalid $5.01 Caleb $2.29 ben $4.31 Hao . DataFrame Sort . print(df.sort_values(by=[&#39;Name&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;Name&#39;], ascending=False)) . Types Of Lemonade Price Name 9 Carrot $5.01 Caleb 11 Vanilla $4.31 Hao 0 Lemon $1.79 Jake 8 Blueberry $3.02 Khalid 4 Sparkling $5.00 ava 6 Frozen $3.79 bella 10 Mint $2.29 ben 2 Rootbeer $3.01 harry 1 Strawberry $2.19 larry 5 Lavender $1.12 lesha 7 Peach $4.00 sarah 3 Mango $1.49 trent Types Of Lemonade Price Name 3 Mango $1.49 trent 7 Peach $4.00 sarah 5 Lavender $1.12 lesha 1 Strawberry $2.19 larry 2 Rootbeer $3.01 harry 10 Mint $2.29 ben 6 Frozen $3.79 bella 4 Sparkling $5.00 ava 8 Blueberry $3.02 Khalid 0 Lemon $1.79 Jake 11 Vanilla $4.31 Hao 9 Carrot $5.01 Caleb . DataFrame Selection or Filter . print(df[df.GPA &gt; 3.00]) . AttributeError Traceback (most recent call last) /home/eli/Eli-1/_notebooks/2023-03-09-AP-unit2-3.ipynb Cell 13 in &lt;cell line: 2&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/Eli-1/_notebooks/2023-03-09-AP-unit2-3.ipynb#X15sdnNjb2RlLXJlbW90ZQ%3D%3D?line=0&#39;&gt;1&lt;/a&gt; #print only values with a specific criteria -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/Eli-1/_notebooks/2023-03-09-AP-unit2-3.ipynb#X15sdnNjb2RlLXJlbW90ZQ%3D%3D?line=1&#39;&gt;2&lt;/a&gt; print(df[df.GPA &gt; 3.00]) File ~/anaconda3/lib/python3.9/site-packages/pandas/core/generic.py:5575, in NDFrame.__getattr__(self, name) 5568 if ( 5569 name not in self._internal_names_set 5570 and name not in self._metadata 5571 and name not in self._accessors 5572 and self._info_axis._can_hold_identifiers_and_holds_name(name) 5573 ): 5574 return self[name] -&gt; 5575 return object.__getattribute__(self, name) AttributeError: &#39;DataFrame&#39; object has no attribute &#39;GPA&#39; . DataFrame Selection Max and Min . print(df[df.GPA == df.GPA.max()]) print() print(df[df.GPA == df.GPA.min()]) . Student ID Year in School GPA 4 324 Junior 4.75 Student ID Year in School GPA 11 456 10 2.75 . Create your own DataFrame . Using Pandas allows you to create your own DataFrame in Python. . Python Dictionary to Pandas DataFrame . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;calories&quot;: [420, 380, 390], &quot;duration&quot;: [50, 40, 45] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;day1&quot;, &quot;day2&quot;, &quot;day3&quot;]) print(df) . -Dict_to_DF calories duration 0 420 50 1 380 40 2 390 45 -Dict_to_DF_labels-- calories duration day1 420 50 day2 380 40 day3 390 45 . Examine DataFrame Rows . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;day1&quot;, &quot;day3&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;day1&quot;]) . -Examine Selected Rows calories duration day1 420 50 day3 390 45 --Examine Single Row-- calories 420 duration 50 Name: day1, dtype: int64 . Pandas DataFrame Information . print(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Index: 3 entries, day1 to day3 Data columns (total 2 columns): # Column Non-Null Count Dtype -- -- 0 calories 3 non-null int64 1 duration 3 non-null int64 dtypes: int64(2) memory usage: 180.0+ bytes None . Example of larger data set . Pandas can read CSV and many other types of files, run the following code to see more features with a larger data set . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_json(&#39;files/food.json&#39;).sort_values(by=[&#39;Duration&#39;], ascending=False) print(&quot;name&quot; &quot;Apple&quot;, &quot;category&quot; &quot;Fruit&quot;, &quot;calories&quot; 95, &quot;protein&quot; 0.5, &quot;fat&quot; 0.3, &quot;carbohydrates&quot; 25, &quot;vitamin_c&quot; 8.4) . Input In [3] &#34;calories&#34; 95, ^ SyntaxError: invalid syntax . APIs are a Source for Writing Programs with Data . 3rd Party APIs are a great source for creating Pandas Data Frames. . Data can be fetched and resulting json can be placed into a Data Frame | Observe output, this looks very similar to a Database | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot; fetch = requests.get(url) json = fetch.json() # filter data for requirement df = pd.DataFrame(json[&#39;countries_stat&#39;]) # filter endpoint for country stats print(df.loc[0:5, &#39;country_name&#39;:&#39;deaths&#39;]) # show row 0 through 5 and columns country_name through deaths fetch() . country_name cases deaths 0 USA 82,649,779 1,018,316 1 India 43,057,545 522,193 2 Brazil 30,345,654 662,663 3 France 28,244,977 145,020 4 Germany 24,109,433 134,624 5 UK 21,933,206 173,352 . Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Amazing. . | When choosing a data set, think about the following... . Does it have a good sample size? | Is there bias in the data? | Does the data set need to be cleaned? | What is the purpose of the data set? | ... | . | Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) . | . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. . Here are some suggestions... . Titanic Dataset:This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. | Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | . These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset... . Kaggle:The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. | UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . Titanic Data . Look at a sample of data. . import seaborn as sns # Load the titanic dataset titanic_data = sns.load_dataset(&#39;titanic&#39;) print(&quot;Titanic Data&quot;) print(titanic_data.columns) # titanic data set print(titanic_data[[&#39;survived&#39;,&#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;class&#39;, &#39;fare&#39;, &#39;embark_town&#39;]]) # look at selected columns . Titanic Data Index([&#39;survived&#39;, &#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;fare&#39;, &#39;embarked&#39;, &#39;class&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;deck&#39;, &#39;embark_town&#39;, &#39;alive&#39;, &#39;alone&#39;], dtype=&#39;object&#39;) survived pclass sex age sibsp parch class fare 0 0 3 male 22.0 1 0 Third 7.2500 1 1 1 female 38.0 1 0 First 71.2833 2 1 3 female 26.0 0 0 Third 7.9250 3 1 1 female 35.0 1 0 First 53.1000 4 0 3 male 35.0 0 0 Third 8.0500 .. ... ... ... ... ... ... ... ... 886 0 2 male 27.0 0 0 Second 13.0000 887 1 1 female 19.0 0 0 First 30.0000 888 0 3 female NaN 1 2 Third 23.4500 889 1 1 male 26.0 0 0 First 30.0000 890 0 3 male 32.0 0 0 Third 7.7500 embark_town 0 Southampton 1 Cherbourg 2 Southampton 3 Southampton 4 Southampton .. ... 886 Southampton 887 Southampton 888 Southampton 889 Cherbourg 890 Queenstown [891 rows x 9 columns] . Use Pandas to clean the data. Most analysis, like Machine Learning or even Pandas in general like data to be in standardized format. This is called &#39;Training&#39; or &#39;Cleaning&#39; data. . # Preprocess the data from sklearn.preprocessing import OneHotEncoder td = titanic_data td.drop([&#39;alive&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;class&#39;, &#39;embark_town&#39;, &#39;deck&#39;], axis=1, inplace=True) td.dropna(inplace=True) td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;male&#39; else 0) td[&#39;alone&#39;] = td[&#39;alone&#39;].apply(lambda x: 1 if x == True else 0) # Encode categorical variables enc = OneHotEncoder(handle_unknown=&#39;ignore&#39;) enc.fit(td[[&#39;embarked&#39;]]) onehot = enc.transform(td[[&#39;embarked&#39;]]).toarray() cols = [&#39;embarked_&#39; + val for val in enc.categories_[0]] td[cols] = pd.DataFrame(onehot) td.drop([&#39;embarked&#39;], axis=1, inplace=True) td.dropna(inplace=True) print(td) . survived pclass sex age sibsp parch fare alone embarked_C 0 0 3 1 22.0 1 0 7.2500 0 0.0 1 1 1 0 38.0 1 0 71.2833 0 1.0 2 1 3 0 26.0 0 0 7.9250 1 0.0 3 1 1 0 35.0 1 0 53.1000 0 0.0 4 0 3 1 35.0 0 0 8.0500 1 0.0 .. ... ... ... ... ... ... ... ... ... 705 0 2 1 39.0 0 0 26.0000 1 0.0 706 1 2 0 45.0 0 0 13.5000 1 0.0 707 1 1 1 42.0 0 0 26.2875 1 0.0 708 1 1 0 22.0 0 0 151.5500 1 0.0 710 1 1 0 24.0 0 0 49.5042 1 1.0 embarked_Q embarked_S 0 0.0 1.0 1 0.0 0.0 2 0.0 1.0 3 0.0 1.0 4 0.0 1.0 .. ... ... 705 0.0 1.0 706 0.0 1.0 707 1.0 0.0 708 0.0 1.0 710 0.0 0.0 [564 rows x 11 columns] . The result of &#39;Training&#39; data is making it easier to analyze or make conclusions. In looking at the Titanic, as you clean you would probably want to make assumptions on likely chance of survival. . This would involve analyzing various factors (such as age, gender, class, etc.) that may have affected a person&#39;s chances of survival, and using that information to make predictions about whether an individual would have survived or not. . Data description:- Survival - Survival (0 = No; 1 = Yes). Not included in test.csv file. - Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) . Name - Name | Sex - Sex | Age - Age | Sibsp - Number of Siblings/Spouses Aboard | Parch - Number of Parents/Children Aboard | Ticket - Ticket Number | Fare - Passenger Fare | Cabin - Cabin | Embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton) | . | Perished Mean/Average . | . print(titanic_data.query(&quot;survived == 0&quot;).mean()) . survived 0.000000 pclass 2.464072 sex 0.844311 age 31.073353 sibsp 0.562874 parch 0.398204 fare 24.835902 alone 0.616766 embarked_C 0.185629 embarked_Q 0.038922 embarked_S 0.775449 dtype: float64 . Survived Mean/Average | . print(td.query(&quot;survived == 1&quot;).mean()) . survived 1.000000 pclass 1.878261 sex 0.326087 age 28.481522 sibsp 0.504348 parch 0.508696 fare 50.188806 alone 0.456522 embarked_C 0.152174 embarked_Q 0.034783 embarked_S 0.813043 dtype: float64 . Survived Max and Min Stats . print(td.query(&quot;survived == 1&quot;).max()) print(td.query(&quot;survived == 1&quot;).min()) . survived 1.0000 pclass 3.0000 sex 1.0000 age 80.0000 sibsp 4.0000 parch 5.0000 fare 512.3292 alone 1.0000 embarked_C 1.0000 embarked_Q 1.0000 embarked_S 1.0000 dtype: float64 survived 1.00 pclass 1.00 sex 0.00 age 0.75 sibsp 0.00 parch 0.00 fare 0.00 alone 0.00 embarked_C 0.00 embarked_Q 0.00 embarked_S 0.00 dtype: float64 . Machine Learning Visit Tutorials Point . Scikit-learn (Sklearn) is the most useful and robust library for machine learning in Python. It provides a selection of efficient tools for machine learning and statistical modeling including classification, regression, clustering and dimensionality reduction via a consistence interface in Python. . Description from ChatGPT. The Titanic dataset is a popular dataset for data analysis and machine learning. In the context of machine learning, accuracy refers to the percentage of correctly classified instances in a set of predictions. In this case, the testing data is a subset of the original Titanic dataset that the decision tree model has not seen during training......After training the decision tree model on the training data, we can evaluate its performance on the testing data by making predictions on the testing data and comparing them to the actual outcomes. The accuracy of the decision tree classifier on the testing data tells us how well the model generalizes to new data that it hasn&#39;t seen before......For example, if the accuracy of the decision tree classifier on the testing data is 0.8 (or 80%), this means that 80% of the predictions made by the model on the testing data were correct....Chance of survival could be done using various machine learning techniques, including decision trees, logistic regression, or support vector machines, among others. . | Code Below prepares data for further analysis and provides an Accuracy. IMO, you would insert a new passenger and predict survival. Datasets could be used on various factors like prediction if a player will hit a Home Run, or a Stock will go up or down. . Decision Trees, prediction by a piecewise constant approximation. | Logistic Regression, the probabilities describing the possible outcomes. | . | . from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Split arrays or matrices into random train and test subsets. X = td.drop(&#39;survived&#39;, axis=1) y = td[&#39;survived&#39;] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) # Train a decision tree classifier dt = DecisionTreeClassifier() dt.fit(X_train, y_train) # Test the model y_pred = dt.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;DecisionTreeClassifier Accuracy:&#39;, accuracy) # Train a logistic regression model logreg = LogisticRegression() logreg.fit(X_train, y_train) # Test the model y_pred = logreg.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;LogisticRegression Accuracy:&#39;, accuracy) . DecisionTreeClassifier Accuracy: 0.7647058823529411 LogisticRegression Accuracy: 0.788235294117647 . /home/eli/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1): STOP: TOTAL NO. of ITERATIONS REACHED LIMIT. Increase the number of iterations (max_iter) or scale the data as shown in: https://scikit-learn.org/stable/modules/preprocessing.html Please also refer to the documentation for alternative solver options: https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression n_iter_i = _check_optimize_result( .",
            "url": "https://eligilmour.github.io/Eli-1/2023/03/09/AP-unit2-3.html",
            "relUrl": "/2023/03/09/AP-unit2-3.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post24": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. . Clouds Impression | Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Displaying images in Python Jupyter notebook . Python Libraries and Concepts used for Jupyter and Files/Directories . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? | What are the command you use in Windows terminal to access files? | What are some of the major differences? | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Smiley&quot;, &#39;file&#39;: &quot;smiley.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? | From your consumer experience, what effects have you experienced from buffering? | How do these effects apply to images? | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? | Describe Grey Scale algorithm in English or Pseudo code? | Describe scale image? What is before and after on pixels in three images? | Is scale image a type of compression? If so, line it up with College Board terms described? | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;smiley&quot;, &#39;file&#39;: &quot;smiley.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . - meta data -- Green Square Internet PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- original image -- . grey image - . - meta data -- Clouds Impression Peter Carolin PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- original image -- . grey image - . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- original image -- . grey image - . - meta data -- smiley Peter Carolin JPEG RGB Original size: (894, 894) Scaled size: (320, 320) -- original image -- . grey image - . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;smiley&quot;, &#39;file&#39;: &quot;smiley.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . - meta data -- Green Square Internet green-square-16.png PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- scaled image -- . grey image . - meta data -- Clouds Impression Peter Carolin clouds-impression.png PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- scaled image -- . grey image . - meta data -- Lassen Volcano Peter Carolin lassen-volcano.jpg JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- scaled image -- . grey image . - meta data -- smiley Peter Carolin smiley.jpg JPEG RGB Original size: (894, 894) Scaled size: (320, 320) -- scaled image -- . grey image . . import numpy as np from PIL import Image img = Image.open(&quot;images/smiley.jpg&quot;) img_array = np.array(img) red_array = img_array.copy() red_array[:,:,1] = 0 red_array[:,:,2] = 0 red_array[:,:,0] = red_array[:,:,0] * 1.5 red_img = Image.fromarray(np.uint8(red_array)) red_img.show() . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | .",
            "url": "https://eligilmour.github.io/Eli-1/2023/03/07/AP-unit2-2.html",
            "relUrl": "/2023/03/07/AP-unit2-2.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post25": {
            "title": "Night@Museum",
            "content": "Night@Museum . Night at the museum is a night at del norte from 6-7:30 pm and this is a night where family, friends, and students can come to del norte and take a trip around all of the elective classes. Ceramics, 3d Animation, Ap Computer Science, Drawing/Painting, and AP Art studio were displaying their Final projects to Friends and family. | ( This was a very fun night and I enjoyed looking at all of the art pieces and I can’t wait to be back again ) | . Olivia Haffie’s Art piece . . This is Olivia Haffie’s art ( drawing and Painting ) | This drawing stood out to me because the colors on this piece are amazing and are very bright which caught my eye. | I like how she used many different shapes and different shades of colors. | . Rental Retreat Website . . This webiste really caught my eye because first off I love looking at home in my free time, Its cool looking at different designs that people come up with. | This webiste stood out because they have some really cool features like where you can book your stay using a calendar of 2023. | I like the design of the webiste and overall they did a great job. | . James Lee . . This photo is very cool to me because I love gaming and its really cool how they used blender to create these pieces and Ive taken the class and its not easy to use and this person did a great job. | The background and the main piece really blends together and the color scheme is very well thought of and looks very good. | Great Job Jame lee. . | Overall the expirence at the night of the museum was really fun and I love doing this every year and get to see many different great projects that people have really worked hard on and get to interact with your friends, or even people that you haven’t seen in a while. Overall 10/10. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/02/26/night@.html",
            "relUrl": "/fastpages/markdown/2023/02/26/night@.html",
            "date": " • Feb 26, 2023"
        }
        
    
  
    
        ,"post26": {
            "title": "All 6 disscusion Hacks",
            "content": "5.1 . 1. ( three benefits and effects ) . Benefical effects: The Increase of productivity and efficiency in many industries. . Harmful effects: The loss of jobs and automation of certain occupations. . Benefical effects: Improved communication and connectivity around the globe. . Harmful effects: The Increase of dependence on technology and potential loss of privacy. . Benefical effects: Improved access to education and information through the internet. . Harmful effects: The Spread of misinformation and the erosion of critical thinking skills. . 2. . Whats the problem with Dopamine? Well having too much dopmaine is not good for you because it is linked to being more competitive, aggressive and having poor impulse control. It can also lead to conditions that include ADHD, binge eating, and addiction. It is not a parent conspiracy, Dopamine is a real neurotransmitter. Dopamine imbalances can be caused by genetic or environmental factors, such as drug use or certain medical conditions. For me personal I don’t find an issue with dopmaine but I know some people who do which leads to them not paying attention and hard time staying focused. . 5.2 . 1. . Learn about technology: Understanding how technology works and how to use it effectively can give you more control over your digital life. . Get involved in online communities: Joining online communities that share your interests can be a great way to connect with like-minded people and learn new things. . Learn how to code: Understanding how to code can give you more control over the technology you use and enable you to create your own digital tools and apps. . 2. . Share knowledge and resources: Offer guidance and provide resources that can help the person gain the skills and knowledge they need to become more empowered. . Provide mentorship: Offer support and guidance as the person navigates the digital world. . Offer technical assistance: Provide hands-on help with setting up accounts, using software, or troubleshooting problems. . If a student at Del Norte HS needed help on a problem that they have, say for example in coding, I could help them and give them assistance to what ever the problem is. | . 3. . paper-based systems and bureaucracy can be a barrier to digital empowerment. Say For example, if a government or organization still relies heavily on paper-based systems, it can make it difficult for citizens or employees to access services or information digitally. This can be due to a lack of digitization of official documents, or not having the infrastructure for digital systems. . Additionally, in some countries or regions with restricted internet access, lack of infrastructure, or government censorship can also be a barrier to digital empowerment. . 5.3 . Intentional or Purposeful bias . Google “What age groups use Facebook” vs “… TikTok”? My take is that more of the older people use facebook than younger people ( teens ) and younger people use instagram more. Each app requires you to enter a birthday, but it is really easy to lie about the birthday. So there could be really young people on both apps with out knowing. I think it is harmful because their shouldn’t be any young kids on both of these apps, because their is some cases of sensitive content. | . | Why do virtual assistants have female voices? Virtual assistans are usually female voices because many studies have found that female voices tend to articulate vowel sounds more clearly which makes them easier to understand. In my opinion, I find female voices more soothing. | . | Talk about an algorithm that influences your decisions, think about these companies? (ie FAANG - Facebook, Amazon, Apple,Netflix, Google) One algorithm that influences decisions made by several of these companies is the recommendation algorithm. This algorithm is used by companies such as Netflix, Amazon, and YouTube to suggest products, movies, or videos that they think a user might be interested in based on their previous viewing or purchase history. The goal of a recommendation algorithm is to personalize the user experience and improve engagement by showing them content that is more likely to meet their interests and preferences. | . | . HP Computers are racist . I don’t think that was done on purpose because I believe that they didn’t get enought data on african americans and this shows that in the video the camera won’t follow the african american but it will follow the caucasian female. | Next time they should get more data using everybody, not just one type of a person. | Also this is a very strong claim because there could have been techinical issues. If this has happened more that once, then I could see it. | . 5.4 . Describe a crowdsource idea and how you might initiate it in our environment? . A crowdsource idea for a school environment could be a student-led project to improve the school’s facilities or programs. We can achieve this by the Start of identifying an issue that the students, staff, or community members want to address, such as a lack of study spaces or a need for new equipment in the gym. Then Gathering information and resources, Conducting research to gather information about the problem and gather resources such as funds, materials, and volunteers. Lastly Launching the project, Once you have gathered the resources, launch the project and keep the community informed about its progress. | . What about Del Norte crowdsourcing? Could your project be better with crowdsourcing? . Yes my groups project could be alot better with crowdsourcing because we would get many different inputs from lots of people and many different perspectivies. It would help us with creating new features and having great ideas with also helping with problem solving. This would be great it if had crowdsourcing. | . What kind of data could you capture at N@tM to make evening interesting? . Well i could capture many different projects around all of the classrooms and give feedback to each one of the projects I find intresting to me, also create a blog about what i see at N@TM night. | . 5.5 . There are several types of open-source licenses, and choosing the right one can have a significant impact on how your code is used and what others are able to do with it. Here are some of the most popular open-source licenses; MIT License: The MIT License is one of the most permissive open-source licenses. It allows others to use, modify, and distribute your code for any purpose, as long as they include a copy of the license and preserve the copyright notice. . | Apache License 2.0: The Apache License 2.0 is a more restrictive license than the MIT License. It requires that users of your code include a copy of the license, preserve the copyright notice, and state any changes they have made to your code. . | GNU General Public License (GPL): The GPL is a copyleft license, meaning that derivative works must also be released under the GPL. This means that if someone uses your code to create a new project, they must also open source that project under the GPL. . | BSD 3-Clause License: The BSD 3-Clause License is similar to the MIT License but has some additional restrictions. For example, it requires that users of your code include a copy of the license and preserve the copyright notice. . | . | The text discusses the impact of software licenses, specifically the General Public License (GPL), on businesses like Qualcomm. The GPL requires any derivative work to be free and open source, which could potentially void a company’s rights to charge for software and patents. The author highlights the importance of knowing the type of software license one is using, as it could have a significant impact on business. The text mentions different types of licenses, including the Creative Commons Zero v1.0 Universal, Open Source MIT License, and Open Source GPL License. The author discusses the requirement to comply with the terms of licenses and the need to cite sources. The text also touches on the concept of Digital Rights Management (DRM) and the challenge of understanding the impact of Creative Commons licenses on individuals and businesses. . | I am going to keep the apache license 2.0 because its A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code. This works for me. For my Group’s license we used the MIT license because its free to us first of all, also the Permissions is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files, to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: | 5.6 . Phone number Email address Date of birth Full name . | I think that The protection of PII is an important issue and it’s important to take appropriate measures to secure personal information and prevent unauthorized access, use, or disclosure. It is very important to keep the right information disclosed and not able to be seen. . | Good Passwords: Length: A minimum length of 12 characters or more. Complexity: A mix of uppercase and lowercase letters, numbers, and special characters is ideal. Uniqueness: The password should not be a word found in a dictionary or a commonly used password. | . Bad Passwords . Length: Short passwords that are less than 8 characters are easily guessable. Simplicity: Passwords that are just a word or a simple combination of words (“password123”) are easily crackable. Predictability: Passwords that are based on easily accessible personal information (name, birthdate, address) are also not secure. | . | Symmetric encryption, also known as shared secret encryption, uses a single key to encrypt and decrypt the data. In this type of encryption, both the sender and the receiver have the same key, and this key is used to encrypt the data before transmission and decrypt the data upon receipt. The key must be kept confidential and must be securely exchanged between the sender and the receiver before any data transmission can occur. . | AWS Key Management Service (KMS) managed keys: With KMS, you can create, manage, and use encryption keys to encrypt your data in AWS services. KMS provides a highly available key management service that makes it easy to create, rotate, and manage encryption keys used to encrypt data at rest. . | one phishing technique is called “spear phishing,” where the attacker targets a specific individual or group with a personalized email that is designed to trick the recipient into divulging sensitive information. The email may contain personal information about the recipient, such as their name, job title, or interests, in an attempt to build trust and convince them to take the desired action. |",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/02/13/all6.html",
            "relUrl": "/fastpages/markdown/2023/02/13/all6.html",
            "date": " • Feb 13, 2023"
        }
        
    
  
    
        ,"post27": {
            "title": "Big Idea 5.6 Safe Computing",
            "content": "Blog Reflection . Phone number Email address Date of birth Full name . | I think that The protection of PII is an important issue and it’s important to take appropriate measures to secure personal information and prevent unauthorized access, use, or disclosure. It is very important to keep the right information disclosed and not able to be seen. . | Good Passwords: Length: A minimum length of 12 characters or more. Complexity: A mix of uppercase and lowercase letters, numbers, and special characters is ideal. Uniqueness: The password should not be a word found in a dictionary or a commonly used password. | . Bad Passwords . Length: Short passwords that are less than 8 characters are easily guessable. Simplicity: Passwords that are just a word or a simple combination of words (“password123”) are easily crackable. Predictability: Passwords that are based on easily accessible personal information (name, birthdate, address) are also not secure. | . | Symmetric encryption, also known as shared secret encryption, uses a single key to encrypt and decrypt the data. In this type of encryption, both the sender and the receiver have the same key, and this key is used to encrypt the data before transmission and decrypt the data upon receipt. The key must be kept confidential and must be securely exchanged between the sender and the receiver before any data transmission can occur. . | AWS Key Management Service (KMS) managed keys: With KMS, you can create, manage, and use encryption keys to encrypt your data in AWS services. KMS provides a highly available key management service that makes it easy to create, rotate, and manage encryption keys used to encrypt data at rest. . | one phishing technique is called “spear phishing,” where the attacker targets a specific individual or group with a personalized email that is designed to trick the recipient into divulging sensitive information. The email may contain personal information about the recipient, such as their name, job title, or interests, in an attempt to build trust and convince them to take the desired action. |",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/02/12/5.6idea.html",
            "relUrl": "/fastpages/markdown/2023/02/12/5.6idea.html",
            "date": " • Feb 12, 2023"
        }
        
    
  
    
        ,"post28": {
            "title": "Big Idea 5.5 Legal and Ethical Concerns",
            "content": "Blog Reflection . There are several types of open-source licenses, and choosing the right one can have a significant impact on how your code is used and what others are able to do with it. Here are some of the most popular open-source licenses; MIT License: The MIT License is one of the most permissive open-source licenses. It allows others to use, modify, and distribute your code for any purpose, as long as they include a copy of the license and preserve the copyright notice. . | Apache License 2.0: The Apache License 2.0 is a more restrictive license than the MIT License. It requires that users of your code include a copy of the license, preserve the copyright notice, and state any changes they have made to your code. . | GNU General Public License (GPL): The GPL is a copyleft license, meaning that derivative works must also be released under the GPL. This means that if someone uses your code to create a new project, they must also open source that project under the GPL. . | BSD 3-Clause License: The BSD 3-Clause License is similar to the MIT License but has some additional restrictions. For example, it requires that users of your code include a copy of the license and preserve the copyright notice. . | . | The text discusses the impact of software licenses, specifically the General Public License (GPL), on businesses like Qualcomm. The GPL requires any derivative work to be free and open source, which could potentially void a company’s rights to charge for software and patents. The author highlights the importance of knowing the type of software license one is using, as it could have a significant impact on business. The text mentions different types of licenses, including the Creative Commons Zero v1.0 Universal, Open Source MIT License, and Open Source GPL License. The author discusses the requirement to comply with the terms of licenses and the need to cite sources. The text also touches on the concept of Digital Rights Management (DRM) and the challenge of understanding the impact of Creative Commons licenses on individuals and businesses. . | I am going to keep the apache license 2.0 because its A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code. This works for me. For my Group’s license we used the MIT license because its free to us first of all, also the Permissions is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files, to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: |",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/02/12/5.5diss.html",
            "relUrl": "/fastpages/markdown/2023/02/12/5.5diss.html",
            "date": " • Feb 12, 2023"
        }
        
    
  
    
        ,"post29": {
            "title": "Big Idea 5.4 Crowdsourcing Hacks",
            "content": "Describe a crowdsource idea and how you might initiate it in our environment? . A crowdsource idea for a school environment could be a student-led project to improve the school’s facilities or programs. We can achieve this by the Start of identifying an issue that the students, staff, or community members want to address, such as a lack of study spaces or a need for new equipment in the gym. Then Gathering information and resources, Conducting research to gather information about the problem and gather resources such as funds, materials, and volunteers. Lastly Launching the project, Once you have gathered the resources, launch the project and keep the community informed about its progress. | . What about Del Norte crowdsourcing? Could your project be better with crowdsourcing? . Yes my groups project could be alot better with crowdsourcing because we would get many different inputs from lots of people and many different perspectivies. It would help us with creating new features and having great ideas with also helping with problem solving. This would be great it if had crowdsourcing. | . What kind of data could you capture at N@tM to make evening interesting? . Well i could capture many different projects around all of the classrooms and give feedback to each one of the projects I find intresting to me, also create a blog about what i see at N@TM night. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/02/05/crowdsurfing.html",
            "relUrl": "/fastpages/markdown/2023/02/05/crowdsurfing.html",
            "date": " • Feb 5, 2023"
        }
        
    
  
    
        ,"post30": {
            "title": "Big Idea 5.3 Computing Bias Hacks",
            "content": "Intentional or Purposeful bias . Google “What age groups use Facebook” vs “… TikTok”? My take is that more of the older people use facebook than younger people ( teens ) and younger people use instagram more. Each app requires you to enter a birthday, but it is really easy to lie about the birthday. So there could be really young people on both apps with out knowing. I think it is harmful because their shouldn’t be any young kids on both of these apps, because their is some cases of sensitive content. | . | Why do virtual assistants have female voices? Virtual assistans are usually female voices because many studies have found that female voices tend to articulate vowel sounds more clearly which makes them easier to understand. In my opinion, I find female voices more soothing. | . | Talk about an algorithm that influences your decisions, think about these companies? (ie FAANG - Facebook, Amazon, Apple,Netflix, Google) One algorithm that influences decisions made by several of these companies is the recommendation algorithm. This algorithm is used by companies such as Netflix, Amazon, and YouTube to suggest products, movies, or videos that they think a user might be interested in based on their previous viewing or purchase history. The goal of a recommendation algorithm is to personalize the user experience and improve engagement by showing them content that is more likely to meet their interests and preferences. | . | . HP Computers are racist . I don’t think that was done on purpose because I believe that they didn’t get enought data on african americans and this shows that in the video the camera won’t follow the african american but it will follow the caucasian female. | Next time they should get more data using everybody, not just one type of a person. | Also this is a very strong claim because there could have been techinical issues. If this has happened more that once, then I could see it. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/02/05/computerbias.html",
            "relUrl": "/fastpages/markdown/2023/02/05/computerbias.html",
            "date": " • Feb 5, 2023"
        }
        
    
  
    
        ,"post31": {
            "title": "MCQ Test 2",
            "content": "I scored 47/50 | . . Q17 . . I got this question wrong because I selected one of the two right answers and that I choose one where I didn’t need to include the else statement which was not needed. Next time I will look more throughly and think the problem out more. | . Q30 . . I got this question wrong because I got the first part of the question right, but then it asked for two answers and I choose the one were it says to draw circle last instead of first in the block of code. | . Q47 . . I got this question wrong because If I am being honest, I did have to do some reaserch on this question and I got it wrong, but I know why I got it wrong and now I understand the question and why the correct answer is true. | . Reflection . This test was something that was doable and something that really challenged my brain and their were a few hard problems that I needed help on and really picked my brain. I am glad that I keep on learning these new topics and practicing questions and getting to see many different blocks of code. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/01/30/test2.html",
            "relUrl": "/fastpages/markdown/2023/01/30/test2.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post32": {
            "title": "Rental Car Project Plan",
            "content": "What I will Be Working On . So for me personally, I will be working on a feature that helps make the website more professional and more features to use. I will be mainly working on how to display the cars and the frontend of the webiste and what people will be looking at when they click onto the website. I will make it as user friendly as possible. I will get help from the backend to store all of these cars so I don’t have to maunally input them. ( Making more efficient methods!) | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/01/30/projectplan.html",
            "relUrl": "/fastpages/markdown/2023/01/30/projectplan.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post33": {
            "title": "Big Idea 5.2 Digital Divide Hacks",
            "content": "Post Blog Reflection . 1. . Learn about technology: Understanding how technology works and how to use it effectively can give you more control over your digital life. . Get involved in online communities: Joining online communities that share your interests can be a great way to connect with like-minded people and learn new things. . Learn how to code: Understanding how to code can give you more control over the technology you use and enable you to create your own digital tools and apps. . 2. . Share knowledge and resources: Offer guidance and provide resources that can help the person gain the skills and knowledge they need to become more empowered. . Provide mentorship: Offer support and guidance as the person navigates the digital world. . Offer technical assistance: Provide hands-on help with setting up accounts, using software, or troubleshooting problems. . If a student at Del Norte HS needed help on a problem that they have, say for example in coding, I could help them and give them assistance to what ever the problem is. | . 3. . paper-based systems and bureaucracy can be a barrier to digital empowerment. Say For example, if a government or organization still relies heavily on paper-based systems, it can make it difficult for citizens or employees to access services or information digitally. This can be due to a lack of digitization of official documents, or not having the infrastructure for digital systems. . Additionally, in some countries or regions with restricted internet access, lack of infrastructure, or government censorship can also be a barrier to digital empowerment. .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/01/29/bigide2.html",
            "relUrl": "/fastpages/markdown/2023/01/29/bigide2.html",
            "date": " • Jan 29, 2023"
        }
        
    
  
    
        ,"post34": {
            "title": "Big Idea 5.1 Beneficial and Harmful Effects Hacks",
            "content": "Post Blog Reflection . 1. ( three benefits and effects ) . Benefical effects: The Increase of productivity and efficiency in many industries. . Harmful effects: The loss of jobs and automation of certain occupations. . Benefical effects: Improved communication and connectivity around the globe. . Harmful effects: The Increase of dependence on technology and potential loss of privacy. . Benefical effects: Improved access to education and information through the internet. . Harmful effects: The Spread of misinformation and the erosion of critical thinking skills. . 2. . Whats the problem with Dopamine? Well having too much dopmaine is not good for you because it is linked to being more competitive, aggressive and having poor impulse control. It can also lead to conditions that include ADHD, binge eating, and addiction. It is not a parent conspiracy, Dopamine is a real neurotransmitter. Dopamine imbalances can be caused by genetic or environmental factors, such as drug use or certain medical conditions. For me personal I don’t find an issue with dopmaine but I know some people who do which leads to them not paying attention and hard time staying focused. .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/01/29/5.1bigidea.html",
            "relUrl": "/fastpages/markdown/2023/01/29/5.1bigidea.html",
            "date": " • Jan 29, 2023"
        }
        
    
  
    
        ,"post35": {
            "title": "College Board Grading 3",
            "content": "Row 1 | 1 | . Row 2 | 1 | . Row 3 | 0 | . Row 4 | 1 | . Row 5 | 0 | . Row 6 | 1 | . Final Score | 4/6 | . College Board Grading | 3/6 | . 1: I would give this submission a 1 on this row because the video demonstrates the inpu of the program, output, and the program Functionality. . 2: I would give this submission a 1 on this row because includes two program code segments, one that shows how data has been stored in this list, and also one that shows the data in this same list being used as part of fulfilling the program’s purpose. Also the written response identifies the name of the variable representing the list being used in this response. . 3: I would give this submission a 0 on this row because The explanation of how the list manages complexity is implausible, inaccurate, or inconsistent withthe program. The solution without the list is implausible, inaccurate, or inconsistent with the program. The use of the list does not result in a program that is easier to develop, meaning alternatives presented are equally complex or potentially easier. The use of the list does not result in a program that is easier to maintain, meaning that future changes to the size of the list would cause significant modifications to the code. . 4: I would give this submission a 1 on this row includes two program code segments, Abstraction one showing a student-developed procedure Requirements for program code segments,with at least one parameter that has an effect on the functionality of the procedure. . 5: I would give this response a 0 on this row because The response only describes what the selected algorithm does without explaining how it does it. Also The description of the algorithm does not match the included program code. The code segment consisting of the selected algorithm is not included in the written response. . 6: I would give this submission a 1 on this row because describes the condition being tested by each call to the procedure. Also identifies the result of each call. . Row 1 | 1 | . Row 2 | 1 | . Row 3 | 1 | . Row 4 | 1 | . Row 5 | 1 | . Row 6 | 1 | . Final Score | 6/6 | . College Board Grading | 6/6 | . 1: I would give this submission a 1 becasue The video demonstrates the running of the program including Function input, program functionality, and output. . 2: I would give this submission a 1 because te program includes two program code segments, one that shows how data has been stored in this list and one that shows the data in this same list being used as part of fulfilling the program’s purpose. . 3: I would give this submission a 1 because teh response explains how the named, selected list manages complexity in the program code by explaining why the program code could not be written, or how it would be written differently, without using this list. . 4: I would give this submission a 1 because includes two program code segments, one showing a student-developed procedure Requirements for program code segments, with at least one parameter that has an effect on the functionality of the procedure and one showing where the student-developed procedure is being called. . 5: I would give this submission a 1 because the response includes a program code segment of a student Implementation developed algorithm that includes sequencing, selection and iteration . 6: I would give this submission a 1 because I would give this submission a 1 on this row because describes the condition being tested by each call to the procedure. Also identifies the result of each call. . Row 1 | 1 | . Row 2 | 0 | . Row 3 | 1 | . Row 4 | 0 | . Row 5 | 1 | . Row 6 | 1 | . Final Score | 4/6 | . College Board Grading | 1/6 | . 1: I would give this submission a 1 on this row because the video demonstrates the inpu of the program, output, and the program Functionality. . 2: I would give this submission a 0 on this row because The list is a one-element list and The use of the list does not assist in fulfilling the program’s purpose. Also could use more details. . 3: I would give thus submission a 1 on this row because the response includes a program code segment that shows a list Complexity being used to manage complexity in the program. . 4: I would give this submission a 0 on this row because The code segment consisting of the procedure is not included in the written responses section. The procedure is a built-in or existing procedure or language structure, such as an event handler or main method, where the student only implements the body of the procedure rather than defining the name, return type and parameters. . 5: I would give this submission a 1 because the response includes a program code segment of a student Implementation developed algorithm that includes sequencing, selection and iteration . 6: I would give this submission a 1 because I would give this submission a 1 on this row because describes the condition being tested by each call to the procedure. Also identifies the result of each call. . Row 1 | 1 | . Row 2 | 1 | . Row 3 | 1 | . Row 4 | 0 | . Row 5 | 1 | . Row 6 | 0 | . Final Score | 4/6 | . College Board Grading | 5/6 | . 1: I would give this submission a 1 on this row because the video demonstrates the inpu of the program, output, and the program Functionality. . 2: I would give this submission a 1 because te program includes two program code segments, one that shows how data has been stored in this list and one that shows the data in this same list being used as part of fulfilling the program’s purpose. . 3: I would give thus submission a 1 on this row because the response includes a program code segment that shows a list Complexity being used to manage complexity in the program. . 4: I would give this submission a 0 on this row because The code segment consisting of the procedure is not included in the written responses section. The procedure is a built-in or existing procedure or language structure, such as an event handler or main method, where the student only implements the body of the procedure rather than defining the name, return type and parameters. . 5: I would give this submission a 1 because the response includes a program code segment of a student Implementation developed algorithm that includes sequencing, selection and iteration . 6: I would give this submission a 0 on this row because the procedure is not identified in written response 3c. The written response for 3d does not apply to the procedure in 3c. Also The two calls cause the same exact sequence of code in the algorithm to execute even if the result is different. .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/01/20/gradingpt3.html",
            "relUrl": "/fastpages/markdown/2023/01/20/gradingpt3.html",
            "date": " • Jan 20, 2023"
        }
        
    
  
    
        ,"post36": {
            "title": "College Board Grading 2",
            "content": "Submission 1 . Row 1 | 1 | . Row 2 | 0 | . Row 3 | 0 | . Row 4 | 1 | . Row 5 | 0 | . Row 6 | 1 | . Final Score | 3/6 | . 1: I would give this submission a 1 on this row of the grading because this shows that when you input something into the game, theiir is an output that shows up which says if you got a point or not. It also shows the program functionally running smoothly. . 2: I would give this submission a 0 on this row because there is only one list is mentioned in this written response and we need more than one to get the point. The list also doesn’t help the program function any better or more efficient. . 3: I would give this submission a 0 in this row because it does provide a list, but very minimal information as to how it works or what it is. It needs to have more explantation for how and what the list is. . 4: I would give this submission a 1 in this row because it has two program code segments one showing a student-developed procedure Requirements for program code segments with at least one parameter that has an effect on the functionality of the procedure. Also one showing where the student-developed procedure is being called. . 5: I would give this submission a 0 on this row because the student-developed algorithm within procedure, evaluateGuess, includes sequencing, and iteration and selection. Also their was very minimal description included. . 6: I would give this submission a 1 on this row because the response describes two different calls to the specific procedure to result in different code being executed. Also The response describes the conditions being tested. . Submission 2 . Row 1 | 1 | . Row 2 | 1 | . Row 3 | 0 | . Row 4 | 0 | . Row 5 | 1 | . Row 6 | 1 | . Final Score | 4/6 | . 1: I would give this submission a 1 because The video demonstrates the running of the program, showing input into the program through keyboard typing. Also describes the input and output of the program demonstrated in the video. . 2: I would give this submission a 1 because the respone has two code segments, one that shows how the data and program works and stored in a list. Also one segment that shows the data in the same list being used to make the program work. . 3: I would give this submission a 0 because the code segment lists are not separtely included in the written response. The written response also doesn’t name the list being used. Their could be more of an explantation included too. . 4: I would give this submission a 0 because the code segment consisting of the procudure is not included in the written response. The written response describes what the procedure does independently without relating it to the overall function of the program. . 5: I would give this submission a 1 because the code segment includes sequencing, selection, and iteration. Also the explantation is in depth and very detailed on how the algorithm works. . 6: I would give this submission a 1 because the program describes two calls to the selected procedure identified in written response 3c. Also the program describes the conditions being tested by each call to the procedure. . Submission 3 . Row 1 | 0 | . Row 2 | 1 | . Row 3 | 0 | . Row 4 | 0 | . Row 5 | 1 | . Row 6 | 1 | . Final Score | 3/6 | . 1: I would give this submission a 0 on this row because the program did not show input and out well and the program functionally doesn’t show clearly. Also the response describes the input and the output. For input, the response states that “the different button clicks to change the screens and the character names selected from each drop-down box.” Could use more explantation. . 2: I would give this submission a 1 on this row because the program includes code segments that shows how the data is stored in the list. Also how the data is the same list being used to help the program run better. . 3: I would give this submission a 0 on this row because the code segments are not separetly included in the written response. Also the use of the list is irrelevant to teh programs functionally. . 4: I would give this submission a 0 on this row because The procedure is a built-in or existing procedure or language structure, such as an event handler or main method, where the student only implements the body of the procedure rather than defining the name, return type, and parameters. . 5: I would give this submission a 1 on this row because the written response includes code segments of a student developed program that has sequencing and iteration, etc … . 6: I would give this submission a 1 on this row because The response describes two calls to the procedure with different arguments that lead to different results from the procedure. Also it describes the conditions that being tested by each call to the procedure. . Submission 4 . Row 1 | 1 | . Row 2 | 0 | . Row 3 | 0 | . Row 4 | 1 | . Row 5 | 1 | . Row 6 | 0 | . Final Score | 3/6 | . 1: I would give this submission a 1 on this row because the video shows the running of the program and the collecting if input using a text field and displaying output results on the screen. . 2: I would give this submission a 0 on this row because even though the response had to code segments, the response didn’t get the point because the lis was not being used. . 3: I would give this submission a 0 on this row because the response does include a list, but the list is not used to its purpose and doesn’t help benefit the program functionally any better. The response doesn’t also explain how the list manages complexity. . 4: I would give this submission a 1 on this row because the response describes the functionality of the procedure. Also the response includes a student developed procedure. . 5: I would give this submission a 1 on this row because the response has a student developed algorithm that includes selection, sequencing and iteration. Also the response explain in depth how the algorithm works. . 6: I would give this submission a 0 on this row because the response meet 2 out of 3 for the criteria. The response gives the condidtions being tested rather than two different arguments. So this section gets 0 out of 1 even though it met most of requirments. .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/01/11/Gradingsection2.html",
            "relUrl": "/fastpages/markdown/2023/01/11/Gradingsection2.html",
            "date": " • Jan 11, 2023"
        }
        
    
  
    
        ,"post37": {
            "title": "Model and Object-Oriented Programming",
            "content": "Class and Object Terms . The foundations of Object-Oriented Programming is defining a Class . In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. | A Class has ... a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self | a collection of Functions/Procedures. These are called *Methods when they exist inside a Class definition. | . | An Object is created from the Class/Template. Characteristics of objects ... an Object is an Instance of the Class/Template | there can be many Objects created from the same Class | each Object contains its own Instance Data | the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class | all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) | . | A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions ... @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) | @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) | observe all instance data (self._name, self.email ...) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email ...) | . | . Class and Object Code . # Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password, GradYear): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._GradYear = GradYear # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters @property def GradYear(self): return self._GradYear @name.setter def GradYear(self, GradYear): self._GradYear = GradYear def is_GradYear(self, GradYear): return self._GradYear == GradYear # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;&#39;, &quot;{self.GradYear}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # define user objects u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;nick&#39;, password=&#39;123nick&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;eli&#39;, password=&#39;123eli&#39;) u5 = User(name=&#39;Hedy Lemarr&#39;, uid=&#39;hedy&#39;, password=&#39;123hedy&#39;) # put user objects in list for convenience users = [u1, u2, u3, u4, u5] # Find user print(&quot;Test 1, find user 3&quot;) u = tester(users, u3.uid, &quot;123lex&quot;) # Change user print(&quot;Test 2, change user 3&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u = tester(users, u.uid, &quot;123qwerty&quot;) # Make dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Test 3, make a dictionary&quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) print(&quot;Test 4, make a dictionary&quot;) json_string = json.dumps([vars(user) for user in users]) print(json_string) . Input In [2] return f&#39;name: &#34;{self.name}&#34;, id: &#34;{self.uid}&#34;, psw: &#34;{self.password}&#34;&#39;, &#34;{self.GradYear}&#34;&#39; ^ SyntaxError: EOL while scanning string literal . Hacks . Add new attributes/variables to the Class. Make class specific to your CPT work. . Add classOf attribute to define year of graduation Add setter and getter for classOf | . | Add dob attribute to define date of birth This will require investigation into Python datetime objects as shown in example code below | Add setter and getter for dob | . | Add instance variable for age, make sure if dob changes age changes Add getter for age, but don&#39;t add/allow setter for age | . | Update and format tester function to work with changes | . Start a class design for each of your own Full Stack CPT sections of your project . Use new code cell in this notebook | Define init and self attributes | Define setters and getters | Make a tester | . Start Code for Hacks . from datetime import date def calculate_age(born): today = date.today() return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) dob = date(1943, 11, 4) age = calculate_age(dob) print(age) . 79 . from werkzeug.security import generate_password_hash, check_password_hash from datetime import date import json class User: def __init__(self, name, email, password, dob): self._name = name # variables with self prefix become part of the object, self._email = email self.set_password(password) self._dob = dob @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def email(self): return self._email # a setter function, allows name to be updated after initial object creation @email.setter def email(self, email): self._email = email # check if uid parameter matches user id in object, return boolean def is_email(self, email): return self._email == email # dob property is returned as string, to avoid unfriendly outcomes @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob should be have verification for type date @dob.setter def dob(self, dob): self._dob = dob # age is calculated and returned each time it is accessed @property def age(self): today = date.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) @property def classOf(self): return self._dob.year + 18 # dictionary is customized, removing password for security purposes @property def dictionary(self): dict = { &quot;name&quot; : self.name, &quot;email&quot; : self.email, &quot;dob&quot; : self.dob, &quot;age&quot; : self.age, &quot;classOf&quot; : self.classOf } return dict # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.dictionary) # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;User(name={self._name}, email={self._email}, password={self._password},dob={self._dob})&#39; if __name__ == &quot;__main__&quot;: u1 = User(name=&#39;Thomas Edison&#39;, email=&#39;toby@gmail.com&#39;, password=&#39;123toby&#39;, dob=date(1847, 2, 11)) print(&quot;JSON ready string: n&quot;, u1, &quot; n&quot;) print(&quot;Raw Variables of object: n&quot;, vars(u1), &quot; n&quot;) print(&quot;Raw Attributes and Methods of object: n&quot;, dir(u1), &quot; n&quot;) print(&quot;Representation to Re-Create the object: n&quot;, repr(u1), &quot; n&quot;) user1 = User(name=&#39;Trent Cardall&#39;, email=&#39;trentcardal33333@gmail.com&#39;, password=&#39;Trent11921&#39;, dob=date(2005, 3, 9)) user2 = User(name=&#39;Samarth Kalanke&#39;, email=&#39;samarth112@gmail.com&#39;, password=&#39;samarth909123&#39;, dob=date(2006, 10, 19)) user3 = User(name=&#39;Eli Gilmour&#39;, email=&#39;EliGilmour@gmail.com&#39;, password=&#39;Elig10291&#39;, dob=date(2006, 8, 8)) user4 = User(name=&#39;Khalid Farah&#39;, email=&#39;khalidfarah199@gmail.com&#39;, password=&#39;Khalidlovescompsci112&#39;, dob=date(2006, 7, 7)) def info(person): print(&quot; t&quot; + &quot;name: &quot; + person.name) print(&quot; t&quot; + &quot;email: &quot; + person.email) print(&quot; t&quot; + &quot;password: &quot; + person._password) print(&quot; t&quot; + &quot;age: &quot; + str(person.age)) print(&quot; t&quot; + &quot;Class of &quot; + str(person.classOf) + &quot; n&quot;) print(&quot;People Going on road trip to Columbus Ohio( 2 day trip ):&quot; + &quot; n&quot;) info(user1) info(user2) info(user3) info(user4) . JSON ready string: {&#34;name&#34;: &#34;Thomas Edison&#34;, &#34;email&#34;: &#34;toby@gmail.com&#34;, &#34;dob&#34;: &#34;02-11-1847&#34;, &#34;age&#34;: 175, &#34;classOf&#34;: 1865} Raw Variables of object: {&#39;_name&#39;: &#39;Thomas Edison&#39;, &#39;_email&#39;: &#39;toby@gmail.com&#39;, &#39;_password&#39;: &#39;sha256$GKh7Y1FyvjMjNi0D$e9e3931bc13f457d8669272fcff9570bcd24e9716fe025137a76da58c8e83144&#39;, &#39;_dob&#39;: datetime.date(1847, 2, 11)} Raw Attributes and Methods of object: [&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;_dob&#39;, &#39;_email&#39;, &#39;_name&#39;, &#39;_password&#39;, &#39;age&#39;, &#39;classOf&#39;, &#39;dictionary&#39;, &#39;dob&#39;, &#39;email&#39;, &#39;is_email&#39;, &#39;is_password&#39;, &#39;name&#39;, &#39;set_password&#39;] Representation to Re-Create the object: User(name=Thomas Edison, email=toby@gmail.com, password=sha256$GKh7Y1FyvjMjNi0D$e9e3931bc13f457d8669272fcff9570bcd24e9716fe025137a76da58c8e83144,dob=1847-02-11) People Going on road trip to Columbus Ohio( 2 day trip ): name: Trent Cardall email: trentcardal33333@gmail.com password: sha256$bzWZJabjwi0mKZEI$af9dbecf6e94b08cd37c52ca6539a95d34cc77502c5d9efd786a8bedc6d69891 age: 17 Class of 2023 name: Samarth Kalanke email: samarth112@gmail.com password: sha256$XAk7BSgsrwG9FqB5$59006d7de15de581fd04dbeca674be3415f0aa8d582ac0c3170a0209418814c5 age: 16 Class of 2024 name: Eli Gilmour email: EliGilmour@gmail.com password: sha256$AeM3vXo4gPrM30NB$06c88fc37339cca78eebe7a400d284cceec084810298b835c399d5bb7a0fbf3a age: 16 Class of 2024 name: Khalid Farah email: khalidfarah199@gmail.com password: sha256$1tPaXufXDvI0R7yA$361375a2f83d56f33522ed151f59fafc2fd416fb2d31b496b8c4c4cab4410eb4 age: 16 Class of 2024 .",
            "url": "https://eligilmour.github.io/Eli-1/2023/01/10/PBL-model.html",
            "relUrl": "/2023/01/10/PBL-model.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post38": {
            "title": "College Board Grading",
            "content": "Submission 1 . Row 1 | 1 | . Row 2 | 1 | . Row 3 | 1 | . Row 4 | 0 | . Row 5 | 1 | . Row 6 | 1 | . Final Score | 5/6 | . 1: They get points because The video demonstrates the running of the program including input, output, and program functionallly. . 2: They get points because it includes two program code segments - one that shows how data has been stored in this list - one that shows the data in this same list being used as part of fulfilling the program’s purpose. . 3: They get points because it includes a program code segment that shows a list being used to manage complexity in the program. ( he explains well on what would happen if sideIndex was not used) . 4: They get no points beacuse The code segment consisting of the procedure is not included in the written responses section. The procedure is a built-in or existing procedure or language structure, such as an event handler or main method. . 5: They get points because The response explains in great detail how the algorithm in the procedure works so it can be recreated. The student-developed algorithm within procedure. . 6: they get points because it describes two calls to the selected procedure identified in written response 3c. Each call must pass a different arguments that causes a different segment of code in the algorithm to execute. describes the conditions being tested by each call to the procedure. . Submission 2 . Row 1 | 1 | . Row 2 | 1 | . Row 3 | 0 | . Row 4 | 1 | . Row 5 | 1 | . Row 6 | 1 | . Final Score | 5/6 | . 1: The video demonstrates the running of the program functionality, output, and Input. Shows clearly how the program works and many different examples. . 2: The written response includes two program code segments: one that shows how data has been stored in this list and one that shows the data in this same list being used as part of fulfilling the program’s purpose. It also identifies the name of the variable representing the list being used in this response. . 3: The explantation does not apply to the selected list and the use of their list is not used in the program. The use of their list does not result in a program that is easier to develop, meaning alternatives presented are equally complex or potentially easier. . 4: The program shows a student-developed procedure Requirements for program code segments with at least one parameter that has an effect on the functionality of the procedure, and one showing where the student-developed procedure is being called. . 5: The response was explained in great detailed steps on how the indentified algorithm works so someone else can recreate it. Also it includes sequencing, selection, and iteration. . 6: The response desribes the condition being tested by each call to the procedure. The response inculdes indentifies the result of each call. .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2023/01/04/gradingcollege.html",
            "relUrl": "/fastpages/markdown/2023/01/04/gradingcollege.html",
            "date": " • Jan 4, 2023"
        }
        
    
  
    
        ,"post39": {
            "title": "Unit 17-18 Homework",
            "content": "Hack 1 . A decidable problem is a problem for which an algorithm or a procedure can be written that always terminates after a finite number of steps and correctly answers whether a given input to the problem is a valid solution or not. An example of a decidable problem is determining whether a given string of text is a palindrome (a word or phrase that reads the same forwards and backwards). An undecidable problem is a problem for which it is impossible to design an algorithm or a procedure that always terminates and correctly answers whether a given input is a valid solution or not. An example of an undecidable problem is the Halting problem, which is the problem of determining, given a description of an arbitrary computer program and an input, whether the program will finish running or continue to run forever. | . Hack 2 . Answer = None of the above. | . A. 2 x 6 x 8 is a mathematical expression that evaluates to 96, but it is not an algorithm. . B. 4^5 is a mathematical expression that evaluates to 1024, but it is not an algorithm. . C. (3 x 8)^2 is a mathematical expression that evaluates to 144, but it is not an algorithm. . None of these are a three step alogorithm because these answers only take two steps. So none of the above. | . Hack 3 . function peakFinder(array) { let start = 0; let end = array.length - 1; while (start &lt;= end) { let mid = Math.floor((start + end) / 2); if (array[mid] &gt; array[mid-1] &amp;&amp; array[mid] &gt; array[mid+1]) { return The ${mid} indexed number, ${array[mid]} is a peak; } else if (array[mid] &lt; array[mid-1]) { end = mid - 1; } else { start = mid + 1; } } return “No peak element found”; } . | This function is using a while loop to search for a “peak” element in an array. A peak element is defined as an element that is greater than or equal to its neighbors in the array.The while loop will iterate through each element in the array and check if it is a peak. If the element is the first or last element in the array, it will only check if it is greater than or equal to its one neighbor. If it is any other element, it will check if it is greater than or equal to both of its neighbors. . | . Hack 4 . def merge_sort(data): if len(data) &lt;= 1: return data . mid = len(data) // 2 left_data = merge_sort(data[:mid]) right_data = merge_sort(data[mid:]) . left_index = 0 right_index = 0 sorted_data = [] . while left_index &lt; len(left_data) and right_index &lt; len(right_data): if left_data[left_index] &lt; right_data[right_index]: sorted_data.append(left_data[left_index]) left_index += 1 else: sorted_data.append(right_data[right_index]) right_index += 1 . sorted_data += left_data[left_index:] sorted_data += right_data[right_index:] . return sorted_data . | . if name == ‘main’: data = [9, 1, 7, 6, 2, 8, 5, 3, 4, 0] sorted_data = merge_sort(data) print(sorted_data) . This is a Python function that implements the merge sort algorithm for sorting a list of numbers in ascending order. | . Merge sort is a divide and conquer algorithm that works by repeatedly dividing the input list in half until each sublist contains only one element, and then merging the sublists back together in a sorted manner. . Hack 5 . def heap_permutation(data, n): if n == 1: print(data) return . for i in range(n): heap_permutation(data, n - 1) if n % 2 == 0: data[i], data[n-1] = data[n-1], data[i] else: data[0], data[n-1] = data[n-1], data[0] . | . if name == ‘main’: data = [1, 2, 3] heap_permutation(data, len(data)) . This is a Python function that generates all possible permutations of a given list using the heap’s algorithm. A permutation is an arrangement of a set of items in a specific order. For example, the permutations of the list [1, 2, 3] are [1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], and [3, 2, 1]. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/12/15/17-18hw.html",
            "relUrl": "/fastpages/markdown/2022/12/15/17-18hw.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Unit 16 Homework",
            "content": "Question Answer . Eli Gilmour |   | . 1 | No question here | . 2 | No question here | . 3 | C. To make the simulation more accurate | . 4 | A. Weather | . 5 | C. Situation considered | . 6 | A. Simulation | . 7 | A. Simulation | . 8 | No question here | . 9 | B. Experiment/calculation | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/12/15/16hw.html",
            "relUrl": "/fastpages/markdown/2022/12/15/16hw.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Unit 14/15 Homework",
            "content": "Reflection / Notes . libraries contain procedures used in creating novel programs.Existing code segments can be derived from internal or external sources: Libraries, Previously written code. Libraries simplify complex programs.APIs specify how procedures in libraries should behave and be utilized. Documentation for APIs/Libraries are necessary to gain proper understanding into how to use them. | . 1. What does the random(a,b) function generate? . A. A random integer from a to be exclusive . B. A random integer from a to b inclusive. = Answer . C. A random word from variable a to variable b exclusive. . D. A random word from variable a to variable b inclusive. . The random(a,b) function generates a random integer from a to b inclusive. This means that the function will return a random whole number that is greater than or equal to a and less than or equal to | . 2. What is x, y, and z in random.randrange(x, y, z)? . A. x = start, y = stop, z = step = Answer . B. x = start, y = step, z = stop . C. x = stop, y = start, z = step . D. x = step, y = start, z = stop . In the random.randrange(x, y, z) function, x represents the start of the range, y represents the end of the range, and z represents the step size. This means that the function will return a random integer from x to y, inclusive, with a step size of z. | . 3. Which of the following is NOT part of the random library? . A. random.item = Answer . B. random.random . C. random.shuffle . D. random.randint . The random library is a collection of functions and methods for generating random numbers and other random data in Python. Some of the functions and methods included in the random library are random.item, random.random, random.shuffle, and random.randint. | . 4 . What is the advantage of using libraries? | Reuse of code: Libraries allow you to reuse existing code, which can save you time and effort when working on a new project. This means you don’t have to reinvent the wheel every time you need to perform a common task, such as generating a random number or sorting a list. Improved organization: Libraries can help you organize your code, making it easier to maintain and modify. By using libraries, you can break your code into smaller, more manageable pieces, which can make it easier to understand and debug. Consistency: Libraries can help ensure that your code is consistent and follows best practices. By using a well-established library, you can be confident that the code you are using is reliable and has been tested and refined by others. | . Write a thorough documentation of the following code. | the code begins by importing the random module, which provides functions for generating random numbers and data. Next, the input function is used to prompt the user to enter a list of names. The user’s input is stored in a string called names_string The split method is then used to split names_string into a list of individual names, using the comma character as a delimiter. This list is stored in a variable called names. The len function is used to determine the number of items in the names list, and this value is stored in the variable num_items. The random.randint function is then used to generate a random integer between 0 and num_items - 1. This number is stored in the variable random_choice. The selected name is retrieved from the names list using the random_choice index, and stored in the variable person_who_will_pay. | . 5 . Create a program to pick five random names from a list of at least 15 names | import random . names = [“jerry”, “Bob”, “Charlie”, “David”, “Emily”, “Frank”, “Gina”, “Hannah”, “Ivan”, “Jenny”, “Karen”, “Liam”, “Megan”, “Nina”, “Owen”] . selected_names = random.sample(names, 5) . print(“The selected names are:”) for name in selected_names: print(name) . The code does work, I just can’t put in notebook because My notebooks are having problems uploading. You can try if you want. Create a program to simulate a dice game where each player rolls two fair dice (6 sides); the player with the greater sum wins | | . import random . player1_dice1 = random.randint(1, 6) player1_dice2 = random.randint(1, 6) player1_sum = player1_dice1 + player1_dice2 . player2_dice1 = random.randint(1, 6) player2_dice2 = random.randint(1, 6) player2_sum = player2_dice1 + player2_dice2 . if player1_sum &gt; player2_sum: print(“Player 1 wins!”) elif player2_sum &gt; player1_sum: print(“Player 2 wins!”) else: print(“It’s a tie!”) . The code does work, I just can’t put in notebook because My notebooks are having problems uploading. You can try if you want. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/12/14/homework.html",
            "relUrl": "/fastpages/markdown/2022/12/14/homework.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Unit 12-13 Homework",
            "content": "Homework Part 1 . Problem 1: This problem involves parameters . Qais is writing code to calculate formulas from his math class. He’s currently working on a procedure to calculate average speed, based on this formula: . Average speed= . Total Time/Total Distance ​ . Highlight which of these is the best procedure for calculating and displaying average speed. PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (distance/time) } | PROCEDURE calcAvgSpeed (distance) { DISPLAY (distance/time) } | PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (time/distance) = Answer } | . | . . Problem 2: Procedures with return values . James Hunter is looking through his classmate’s program and sees a procedure called heightenEmotions: PROCEDURE heightenEmotions(myEmotion) . { moreEnergy ← CONCAT(myEmotion, “!!!”) . moreVolume ← UPPER(moreEnergy) . RETURN moreVolume } . That procedure manipulates strings using two built-in procedures, CONCAT for concatenating two strings together, and UPPER for converting a string to uppercase. . James Hunter then sees this line of code: . heightenEmotions(“im mad”) . After that line of code runs, will nothing be displayed? . True . False = Answer . The procedure heightenEmotions takes a string as input, manipulates it using the CONCAT and UPPER procedures, and then returns the resulting string. | . . Problem 3: Procedures with return values . Bubz is writing a program to calculate the carbon footprint of his activities. The procedure calcFlightFootprint calculates the pounds of carbon dioxide produced per passenger in a flight that covers a given number of miles and seats a given number of passengers. . PROCEDURE calcFlightFootprint(numMiles, numPassengers) { CO2_PER_MILE ← 53.29 . carbonPerFlight ← numMiles * CO2_PER_MILE . carbonPerPassenger ← carbonPerFlight / numPassengers . RETURN carbonPerPassenger . } . Bubz wants to use that procedure to calculate the total footprint for his two upcoming flights: LA to NY: 2,451 miles and 118 passengers NY to London: 3,442 miles and 252 passengers . Which of these code snippets successfully calculates and stores her total footprint? Highlight 2 answers. . totalFootprint ← calcFlightFootprint(2451, 118) + calcFlightFootprint(3442, 252) = Answer . | totalFootprint ← calcFlightFootprint(2451, 118 + 3442, 252) . | | totalFootprint ← calcFlightFootprint((2451, 118) + (3442, 252)) = Answer . 4. laNyCarbon ← calcFlightFootprint(2451, 118) nyLondonCarbon ← calcFlightFootprint(3442, 252) totalFootprint ← laNyCarbon + nyLondonCarbon . Part 2 . PROCEDURE find a () . { c – 9 . b &lt;-- 9 * 9 a &lt;-- b * c . Print (a) . } . What is a? = 729 = Answer cost ⟵ 173 tax - 10% . PROCEDURE applytax (cost, cpercentDiscounted) { temp &lt;– 100 + percentTaxed . temp &lt;-- temp / 100 cost &lt;-- cost x temp Print(cost)} . What is the cost? = cost is $190.30 Tempature - 103 Degrees . PROCEDURE convet Fahrenheit (tempature) . { . Celsius &lt;-- tempature - 32 Celsius &lt;-- Celsius x 5/9 . Print (Celsius)} answer = 39.444 . # 3.13 part 1 and 2 . ### #1. Create a procedure that is meant to replace the top running backs yards per game in one season if the current running back has more yards per game . Necessary Parameters: toprbyardspg(100), currentrbyards(1260), totalGames(12) | . PROCEDURE updateTopRunningBack(currentRB, currentRBYardsPerGame, topRB, topRBYardsPerGame) . { IF (currentRBYardsPerGame &gt; topRBYardsPerGame) { topRB &lt;– currentRB topRBYardsPerGame &lt;– currentRBYardsPerGame } } . #2. Write a procedure that will allow the A+ to get to the 1, while avoiding the black boxes. . PROCEDURE getAplus(){ If (can_MoveForward): Move_Forward Else (can_MoveRight): Rotate_Right Move_Forward If (can_MoveLeft); Rotate_Left Move_forward } . #3. Which Is the Correct Way to define the Name of a Procedure?** . A. PROCEDURE MYLIST | B. PROCEDURE MyList = Answer | C. procedure mylist | . #4. Write A Procedure That gets the BeachBall To the Green Square . PROCEDURE BallToGreen{ Rotate_Left Move_Forward Rotate_Right Move_Forward( until count = 6) break Rotate_Left Move_Forward (until count=2) break } .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/12/11/12-13hw.html",
            "relUrl": "/fastpages/markdown/2022/12/11/12-13hw.html",
            "date": " • Dec 11, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Unit 2-3 Vocab",
            "content": "Unit 2 Vocab . Bits are the smallest unit of data in computing. A bit can have a value of either 0 or 1, and is often used to represent a binary value. . | Bytes are a unit of digital data consisting of eight bits. This is the most common unit used to measure the amount of data stored in a computer or transmitted over a network. . | Hexadecimal, also known as hex, is a number system with base 16. It uses 16 distinct symbols, most often the symbols 0-9 to represent values zero to nine, and A, B, C, D, E, F to represent values ten to fifteen. . | Nibbles are a unit of digital data consisting of four bits, or half a byte. . | Unsigned integers are whole numbers that can only have positive values or zero. These numbers do not have a sign to indicate whether they are positive or negative, and are often used to represent values that can only be positive, such as the size of a file or the number of items in a set. . | Signed integers are whole numbers that can have both positive and negative values. These numbers have a sign to indicate whether they are positive or negative, and are often used to represent values that can be either positive or negative, such as the result of a mathematical operation. . | Floating-point numbers, also known as floats, are numbers that have a decimal point. These numbers are often used to represent values that can have a fractional part, such as the result of a division operation. . | Boolean values are values that can only be either true or false. These values are often used in programming to represent a binary condition, such as whether a certain condition is met or not. . | ASCII (American Standard Code for Information Interchange) is a character encoding standard used to represent text in computers and other devices. It uses a set of 128 characters, including the letters of the English alphabet, numbers, and special symbols. . | Unicode is a character encoding standard used to represent text in computers and other devices. It includes all of the characters in the ASCII standard, as well as additional characters from other languages and symbols. . | RGB (Red, Green, Blue) is a color model used to represent colors on a computer or other electronic device. In this model, colors are represented by a combination of the primary colors red, green, and blue, each with a different intensity value. . | Lossy data compression is a method of reducing the size of a file by discarding some of the data. This can result in a loss of quality, but can also significantly reduce the file size. . | Lossless data compression is a method of reducing the size of a file without discarding any data. This ensures that the quality of the data is preserved, but may not result in as significant a reduction in file size as lossy compression. . | . Unit 3 Vocab . A variable is a named location in a computer’s memory that is used to store a value. The value stored in a variable can be changed, and the same variable can be used to store different values at different times. . | Data types are the classification of data based on their type and the operations that can be performed on them. Common data types include integers, floating-point numbers, strings, and Booleans. . | A list is a collection of data items that are organized in a specific order. In Python, lists are represented using square brackets and can contain any data type, including other lists. . | A 2D list is a list that contains other lists as its items. This allows for the creation of data structures that have more than one dimension, such as a grid or a table. . | A dictionary is a data structure that uses keys to map to values. In Python, dictionaries are represented using curly braces and can contain any data type. . | A class is a template or blueprint for creating objects in object-oriented programming. Classes define the properties and behaviors of objects, and objects are instances of a class. . | An algorithm is a step-by-step procedure for solving a problem or achieving a specific goal. Algorithms are used in many different fields, including computer science, mathematics, and engineering. . | A sequence is a type of control structure in which a set of instructions are executed in a specific order. . | Selection is a type of control structure in which a specific set of instructions are executed based on the evaluation of a condition. . | Iteration is a type of control structure in which a set of instructions are repeated until a specific condition is met. . | An expression is a combination of variables, operators, and other elements that produces a value. In programming, expressions are often used in control structures to evaluate conditions. . | Comparison operators are operators that are used to compare two values. In Python, the comparison operators include &lt; (less than), &gt; (greater than), == (equal to), and != (not equal to). . | Boolean expressions are expressions that evaluate to either true or false. In programming, Boolean expressions are often used in control structures to determine which instructions to execute. . | Selection statements are control structures that use Boolean expressions to evaluate conditions and decide which instructions to execute. In Python, the selection statement is the if statement. . | Iteration statements are control structures that repeat a set of instructions until a specific condition is met. In Python, the iteration statements are the for and while loops. . | A truth table is a table that shows the possible combinations of inputs and outputs for a logical operation. Truth tables are often used to evaluate the behavior of Boolean expressions. . | Characters are the basic building blocks of a string. In Python, characters are represented as single quotes (e.g. ‘a’) and can be any letter, number, or symbol. . | Strings are collections of characters that are used to represent text. In Python, strings are represented as double quotes (e.g. “Hello”) or single quotes (e.g. ‘Hello’). . | The length of a string is the number of characters it contains. In Python, the length of a string can be found using the len() function. . | Concatenation is the process of joining two or more strings together to form a new string. In Python, concatenation is performed using the + operator. . | The upper() and lower() methods are used to convert a string to all uppercase or all lowercase characters . | Traversing a string means to access each character in the string one by one. In Python, this can be done using a for loop and the len() function to iterate over the characters in a string. . | The if, elif, and else keywords are used in Python to create conditional statements. . | The if statement is used to evaluate a condition and execute a specific set of instructions if the condition is true. . | The elif statement is used to evaluate additional conditions if the original if condition is false. . | The else statement is used to specify a default set of instructions to execute if all other conditions are false. . | Nested selection statements are if statements that are placed inside of other if statements. This allows for the creation of complex conditional statements that can evaluate multiple conditions. . | The for and while loops are used in Python to repeat a set of instructions multiple times. The for loop is used to iterate over a sequence of items, such as the elements of a list. The while loop is used to repeat a set of instructions as long as a specific condition is true. . | The range() function is used in Python to generate a sequence of numbers. This can be used in a for loop to specify the number of times to repeat the loop. . | The break and continue keywords are used in Python to control the flow of a loop. The break keyword is used to exit a loop completely, while the continue keyword is used to skip the current iteration of the loop and continue with the next iteration. . | Procedural abstraction is the process of separating the details of how a task is performed from the overall logic of the program. In Python, this is achieved using def procedures, which allow for the creation of reusable blocks of code that can be called from other parts of the program. . | Parameters are variables that are used to pass information into a def procedure. When a procedure is called, the values of the parameters are specified and are used by the procedure to perform its tasks. . | Return values are the values that are returned by a def procedure after it has finished executing. Return values can be used by the calling code to access the results of the procedure’s operations. . | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/12/09/vocab.html",
            "relUrl": "/fastpages/markdown/2022/12/09/vocab.html",
            "date": " • Dec 9, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "unit 3 section 8/10 Homework",
            "content": "excercise 1 . list = [1, 2, 3, 4, 5] reversed = [] for value in list: reversed = [value] + reversed print(reversed) . excercise 2 . list = [1, 2, 3, 4, 5] reversed = [] for value in list: reversed = [value] + reversed print(reversed) . reflection . I learned how to create a bubble sort list and learned what each command does and how to write it. Also how to create a reversed list and print. . Quiz corrections . . I got this question wrong because I thought that the position of an element in a list, starts at 1 but it starts at zero. . My Notebook isn’t working so I put the code in a Markdown. . . . I got this question wrong because I thought that the position of an element in a list, starts at 1 but it starts at zero. .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/12/06/8and10hw.html",
            "relUrl": "/fastpages/markdown/2022/12/06/8and10hw.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "Lesson Grades for unit section 3 Presentations",
            "content": "3.1 and 3.2 Lesson Grades . I got 0.8 out of 1 . | The reason I got 0.8 out of 1 because I didn’t do the video two binary hacks. I didn’t know that there were hacks, I missed this page when I was doing the homework. . | . 3.3 and 3.4 Lesson Grades . I got a 0.95 out of 1 . | I answered each question accurately and provided explantations for all. I didn’t do anything above and beyond to get the 1. . | . 3.5 and 3.7 Lesson Grades . I got 0.95 out of 1 . | I put in Great effort put into completion of work nice reflection and made a nice flowchart. . | . 3.8 and 3.10 Lesson Grades . I got a 0.9 out of 1 . | I put in great effort and focuesed in on their presentation and they said I had great work. . | . 3.12 and 3.13 Lesson Grades . I got a 0.9 out of 1 . | I did everything on time and everything that was required and put In good effort. . | . 3.14 and 3.15 Lesson Grades . I got a 0.9 out of 1 . | all of my mc questions were correct and all of the expecations were met. . | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/12/02/grades.html",
            "relUrl": "/fastpages/markdown/2022/12/02/grades.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "Unit section 5-7 Homework",
            "content": "3.5 Binary Hacks . Binary Practice . Using psuedocode operators determine if the statements are true or false. The number type will be indicated in parentheses. . 1. 90(D) = 1000(B) . A. True | B. False Answer = B, number B is larger then number D | . 2. 10(D) ≠ 0110(B) . A. True | B. False Answer = A, because binary D is not equal to B | . 3. 56(D) ≥ 111000(B) . A. True | B. False Answer B, 56 is not equal to B | . 3. 99(D) &lt; 1110011(B) . A. True | B. False Answer = A, because Binary B is larger than binary D | . AND Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 0 | . 0 | 1 | 0 | . 0 | 0 | 0 | . OR Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 1 | . 0 | 1 | 1 | . 0 | 0 | 0 | . Not operator Not Value Result . Not | 1 | 0 | . Not | 0 | 0 | . . Testing out relational operators . Practice with these statements . print(20 &gt; 20) # How can you change the operator to print a value of False? . x = 30 y = 20 z = 10 print(x &gt;= y + z) # How can this return true by only manipulating the operator? . 3.6 Hacks . AP Prep . 1. What is displayed by this code? . result &lt;– 75 | IF result &lt; 80 { DISPLAY(“Please schedule a retake.”) } | ELSE { DISPLAY(“Nice job!”) } | . Nice job! | Display | Please schedule a retake. (answer) | 75 (75 is lower than 80) 2. How is an if statement different from an if-else statement. . | Extra words. | An if statement will only go through a process if a condition is met. An if-else statement will go through code no matter the conditions. (answer) | They are the exact same. | An if statement will go through the entire code segment every single time and the if-else statement is always used in an algorithm, no matter the conditions. (statement must be made in order to go through the code) 3. What would be most appropriate for this situation? Ben wants to check his bank account. If his car fuel is full, he will go to the bank. Otherwise, he will go home. If he goes to the bank, he will withdraw money only if his balance is above $1000. . | If statement | If-else statement (answer) (if he had gas he would go, but no gas means don’t go) 4. What would be most appropriate for this situation? Luke wants to play basketball. If it is sunny outside he will go to the park to play basketball. . | If statement (answer) | If-else statement (doesn’t say what he’s doing when not sunny) Using Python . | animals = [“lion”, “tiger”, “wildebeest”, “shark”, “jellyfish”, “blobfish”, “raven”] . for i in animals: if i == “shark”: # What boolean value does this statement cause? print(“Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand!”) else: print(i) for i in animals: if i == “lion” or “wildebeest” or “raven”: print(“This animal lives in the desert”) . Practice . Using only one more if statement, alter the code to print out a statement saying if an animal lives in the desert, based on booleans . Write code here . beefWellington = { “meat”: True, “prepTime”: 150, “name”: “Beef Wellington” } . cheeseQuesadilla = { “meat”: False, “prepTime”: 10, “name”: “Cheese Quesadilla” . } . chickenAlfredo = { “meat”: True, “prepTime”: 60, “name”: “Chicken Alfredo” } . def cookMeal(dish): if dish[“prepTime”] &lt;= 30: if dish[“meat”] == False: print(“You can cook a”, dish[“name”]) else: print(“Sorry, you do not have meat and cannot cook a”, dish[“name”] ) else: print(“Sorry, you do not have enough time and cannot cook a”, dish[“name”] ) . cookMeal(beefWellington) cookMeal(cheeseQuesadilla) cookMeal(chickenAlfredo) . Exercise 2 . Make a flowchart(here is one we used) and write pseudocode for the following scenario. . Mr. Yeung would like to grade live reviews. | He wants to see if each student has at least 2 issues on their project. If they don’t they receive a score of 2.0. | If they have at least 2 issues, check that they have completed at least 5 of their scrumboard tasks. | If they have completed 5 scrumboard tasks, give the student a 2.7. If they have not completed 5 scrumboard tasks, give them a score of 2.5. If they have completed more than 5 tasks, give them a score of 3.0. | How much would a student with 3 issues and 1 complete scrumboard task receive? | . . Answer . The person would recieve a 2.0 because they have three issues which is more than 2, but they can’t get more points because they don’t have 5 scrumboard tasks completed. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/12/01/testsubject.html",
            "relUrl": "/fastpages/markdown/2022/12/01/testsubject.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "Unit section 3-4 Homework",
            "content": "numbers = [0,1,2,3,4,5,6,7,8,9,10]#sequencing evens = []#sequencing for i in numbers:#selection if (numbers[i] % 2 == 0):#iteration evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . numbers = [0,1,2,3,4,5,6,7,8,9,10]#sequencing odd = []#sequencing for i in numbers: if (numbers[i] % 1 == 0):#selection odd.append(numbers[i])#iteration print(odd) . [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] . given the following code segment below: a ⟵ 7 . b ⟵ 1 . c ⟵ 3 . d ⟵ 4 . a ⟵ b . b ⟵ c + d . d ⟵ b . find the value for a, b, c, d . Answer = a = 1, b = 7, c = 3, d = 7 . A = 1 because even though a =7 at the start, it turns into 1 when b = a b = 7 because b starts off at 1 and then b turns into a which is 7 c = 3 because 3 = c d = c + d =7 . consider the following code segment: hot ⟵ true . cold ⟵ false . cold ⟵ hot . hot ⟵ cold . what are the values of hot and cold after executing the code segment? . the value of hot is true, the value of cold is true the value of hot is false, the value of cold is true the value of hot is true, the value of cold is false the value of hot is false, the value of cold is false . Answer = the value of hot is true, the value of cold is true . num1 = 12 num2 = 18 num3 = 2 num1 = num2 + num3 num3 = num1 + num2 . What is value of num1 and num3? . Num1 = 20 Num3 = 30 . | num1 = 4 num2 = 1 num3 = 28 num2 = num1 + num3 num1 = num3 + num2 . What is value of num1 and num3? . Num2 = 32 Num1 = 29 . Test 1 . firstName &lt;- &quot;Bob&quot; lastName &lt;- &quot;Smith&quot; var &lt;- substring(firstName, 1, 1) name &lt;- concat(lastName, var) email &lt;- concat(name, &quot;@gmail.com&quot;) DISPLAY(email) . What would the result be? . SmithB@gmail.com . Test 2 . word1 &lt;- &quot;computer&quot; word2 &lt;- &quot;textbooks&quot; length1 &lt;- len(word1)/2 length2 &lt;- len(word2)/3 first &lt;- substring(word1, 2, len1) second &lt;- substring(word2, len2+3, len2) newWord &lt;- concat(first, second) DISPLAY(newWord) . ompuook .",
            "url": "https://eligilmour.github.io/Eli-1/javascript/markdown/2022/11/29/theoshomework.html",
            "relUrl": "/javascript/markdown/2022/11/29/theoshomework.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "Unit section 1-2 homework pt2",
            "content": "Hacks . Consider the following code segment: . currentScore ⟵ 10 highScore ⟵ currentscore currentScore ⟵ 7 DISPLAY (currentScore) . What will the currentScore be after running this code segment? | A. 17 b. 10 c. 7 d. none of the above . Answer = C . What will the highScore be? | A. 17 b. 10 c. 7 d. none of the above . Answer = B . Consider the following code segment: | . num1 ⟵ 4 num2 ⟵ 6 num1 ⟵ num 2 DISPLAY(num1) . DISPLAY(num2) . What is displayed after running this code segment? | A. 4 6 b. 6 4 c. 4 4 d. 6 6 . Answer = D . Consider the following code segment: | . num1 ⟵ 25 num2 ⟵ 15 num3 ⟵ 30 num2 ⟵ num3 num3 ⟵ num1 num1 ⟵ num2 DISPLAY(num1) . DISPLAY(num2) . DISPLAY(num3) . What is displayed after running this code segment? | A. 25 15 30 b. 30 30 25 c. 30 15 30 d. 15 30 25 . Answer = B . Consider the following code segment: . p ⟵ 10 q ⟵ 20 r ⟵ 30 s ⟵ 40 p ⟵ q q ⟵ r s ⟵ q r ⟵ p . What is the value of r as a result of running this code segment | A. 10 b. 20 c. 30 d. 40 . Answer = B . Consider the following code segment: . first ⟵ true second ⟵ false second ⟵ first first ⟵ second . Insert Question | A. The value of first is true, and the value of second is false. b. The value of first is false, and the value of second is true. c. The value of first is true, and the value of second is true. d. The value of first is false, and the value of second is false. . Answer = C . Consider the following code segment: | a ⟵ 10 b ⟵ 20 c ⟵ 30 d ⟵ 40 x ⟵ 20 b ⟵ x + b a ⟵ x + 1 d ⟵ c / d + 2 DISPLAY(a) . DISPLAY(b) . DISPLAY(c) . DISPLAY(d) . What is displayed as a result of executing the code segment? | A. 21 40 30 50 b. 10 20 30 40 c. 21 40 30 40 d. 21 30 40 50 . Answer = A . My practice Problems . a ⟵ 19 a ⟵ b a ⟵ 3 Display(b) | Answer = ? . a ⟵ 99 a ⟵ b a ⟵ 4 c ⟵ 13 a ⟵ c Display(c) | Answer = ? . a ⟵ 9 a ⟵ c a ⟵ 8 c ⟵ 13 a ⟵ b Display(b) | Answer = ? . a ⟵ 18 b ⟵ a a ⟵ 11 c ⟵ 00 a ⟵ c Display(A) | Answer = ? . a ⟵ 1 a ⟵ b a ⟵ 30 c ⟵ 15 a ⟵ c D ⟵ 44 Display(D) | Answer = ? . a ⟵ 1 a ⟵ b a ⟵ 30 c ⟵ 15 a ⟵ c D ⟵ 44 D ⟵ b Display(B) | Answer = ? .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/11/29/group1pt2.html",
            "relUrl": "/fastpages/markdown/2022/11/29/group1pt2.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "Unit section 1-2 homework pt1",
            "content": "Practice questions . You want to store the number of apples in a shop. What is the best variable name and data type? | A. numApples, integer b. apples, text c. numApples, string d. isApples, boolean . Answer = A . You are storing true or false in a variable that asks if the classroom is cold. What is the best variable name and data type? | A. weather, integer b. weather, boolean c. isCold, boolean d. cold, string . Answer = c . How do you store the ID numbers for the students in the classroom? Choose the best variable name and data type: | A. IDnumber, string b. whatID, integer c. IDnumberofthestudentsintheclassroom, boolean d. IDnumberofthestudentsintheclassroom, integer . Answer = A . Is itisRainingtodayinsandiego a better option than isRaining? | A. Yes b. No . Answer = no . Which of the following types of data is best for a true or false question? | A. Boolean b. String c. Float d. All of the above . Answer = A . What is the difference between an integer and string of numbers? | A. An integer is just a set data type while a string of numbers can be changed with addition and subtraction b. An integer can be letters and numbers while a string is just numbers c. An integer is just numbers while a string is just words d. An integer can be changed with addition and subtraction and a string is a set number or string of letters. . Answer = D . My practice questions . You want to store the number of cheeseburgers in a resturant. What is the best variable name and data type? | A. numcheeseburgers, integer b. cheeseburgers, text c. numcheeseburgers, string d. ischeeseburgers, boolean . Answer = ? . How do you store the amount of food the students eat in the classroom? Choose the best variable name and data type: | A. IDfood, string b. whatfood, integer c. amountoffood, boolean d. amounoffood, integer . Answer = ? . Is eatingallthefoodintheworld a better option than eatingfood? | A. yes b. No . Answer = ? .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/11/29/Group1homept1.html",
            "relUrl": "/fastpages/markdown/2022/11/29/Group1homept1.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "Tri 1 Final Test Corrections",
            "content": "Score . 48/50 . Question 28 ( wrong ) . . I put answer A because I thought that if the number of units is greater than 25 it would charge them 7 dollars after that. | But Answer C is correct because it shows that when the number of units is greater than 25, it would charge them 7 dollars and the code looks like cost&lt;- 25 * 5 + (numUnits -25) * 7 | . Question 48 ( wrong ) . . I put answer D because the answer is x,y and z and I thought the since 50 is equal to 50, I thought that it would have a value of 50 | Answer C is correct because the value of y is initially 50, but its value is changed to 75 in the fifth statement. | . Questions I searched up . Question 38 because this question was very confusing to me and I didn’t know what temp means in the code segment. I don’t get where they got temp. | Question 30 because it talks about data abstraction and I don’t really get what that means. | Question 26 because I didn’t know that Boolean means that the status of whether a store is open can be represented using only the values true and false, I didn’t know this applies to isOpen. | Question 23 because I didn’t know The position of the runner is sampled at regular intervals to approximate the real-word position. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/11/22/TriFinal1Corrections.html",
            "relUrl": "/fastpages/markdown/2022/11/22/TriFinal1Corrections.html",
            "date": " • Nov 22, 2022"
        }
        
    
  
    
        ,"post51": {
            "title": "Night@Museum",
            "content": "Night@Museum . Night at the museum is a night at del norte from 6-7:30 pm and this is a night where family, friends, and students can come to del norte and take a trip around all of the elective classes. Ceramics, 3d Animation, Ap Computer Science, Drawing/Painting, and AP Art studio were displaying their Final projects to Friends and family. | ( This was a very fun night and I enjoyed looking at all of the art pieces and I can’t wait to be back again ) | . Olivia Haffie’s Art piece . . This is Olivia Haffie’s art ( drawing and Painting ) | This drawing stood out to me because the colors on this piece are amazing and are very bright which caught my eye. | I like how she used many different shapes and different shades of colors. | . Ella Duggan Art Piece . . This is Ella Duggans art ( Ap Studio Art ) | This Drawing was very unique and filled with lots of details. | The colors and texture are very realistic and the concept of the drawing is amazing. | I was Very impressed and this is the drawing that really stood out to me. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/11/04/night@museum.html",
            "relUrl": "/fastpages/markdown/2022/11/04/night@museum.html",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post52": {
            "title": "Blogging about Video Roles",
            "content": "Cool Coders (Ava, Alexa, Antony, Shruthi) Period 4 . There website is about creating a way to manage merchandise for ASB. | Shruthi is the dev ops for the group and she has been working on delpoying the AWS. | Ava is the scrum master and she has been helping everyone with individual assignments and overlooking everyhting to make sure it works. | Alexa is the frontend and she has been working on the fastpages creating the looks of the website. | Antony is the Backend and he has been creating tables using json and using buttons to manage how many products of each item they have. | The cool coders used a stock api and created a list of items including hoodies and pants and then it prints the quantity of the item. | . Jake , Finn, Max, Parker ( Period 4 ) . their customer targert needs: Customers that use spotify or other streaming platforms | make demos of our website | ask for feedback from customers | . | Expectations of each feature: HTML tabs that bring you to a page about information of each genre | User imputs button where they get random song data and api spits out random song ( top 10 tiktok songs ) | . | Jake is scrum master | Finn is dev ops | Max is the backend developer | Parker is the frontend developer | They are going to use blooging to talk about hacks and development ( also to talk about artists ) | Comments ( asking questions ) | . Aarav , Braeden , Tigran , Vunsh ( APCSA ) . Creating Quizme to make school easier with using flashcards and multiple choice questions to replace quizlet. | Using Visual studios live share to share code outside of school | Creating customer feedback on website | Video tutorial for people who can’t read english | Tigran is frontend developer | Aarav is the scrum master | Frontend code uses javascript, css, and HTML | Vunsh is devops and worked on Deployment using AWS | Braeden is Backend Developer | Using lists to store flashcard information and store data | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/10/31/videonotesofroles.html",
            "relUrl": "/fastpages/markdown/2022/10/31/videonotesofroles.html",
            "date": " • Oct 31, 2022"
        }
        
    
  
    
        ,"post53": {
            "title": "Javascript code ( explaining )",
            "content": "This code is creating an HTML table . tr creating a row | . | th creating an header | . | table creating the shape of the table | . | . &lt;!-- HTML table fragment for page --&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Time&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;td id=&quot;time&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_cases&quot;&gt;&lt;/td&gt; &lt;td id=&quot;total_deaths&quot;&gt;&lt;/td&gt; &lt;td id=&quot;active_cases&quot;&gt;&lt;/td&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Country&lt;/th&gt; &lt;th&gt;All-time Cases&lt;/th&gt; &lt;th&gt;Recorded Deaths&lt;/th&gt; &lt;th&gt;Active Cases&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody id=&quot;result&quot;&gt; &lt;!-- generated rows --&gt; &lt;/tbody&gt; &lt;/table&gt; . This code block is how it fetches the data for the covid cases from the api which is being taken from the backend. | The URl is where you access the api to use the data collected. | . &lt;!-- Script is layed out in a sequence (no function) and will execute when page is loaded --&gt; &lt;script&gt; // prepare HTML result container for new output const resultContainer = document.getElementById(&quot;result&quot;); // prepare fetch options const url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot;; const headers = { method: &#39;GET&#39;, // *GET, POST, PUT, DELETE, etc. mode: &#39;cors&#39;, // no-cors, *cors, same-origin cache: &#39;default&#39;, // *default, no-cache, reload, force-cache, only-if-cached credentials: &#39;omit&#39;, // include, *same-origin, omit headers: { &#39;Content-Type&#39;: &#39;application/json&#39; // &#39;Content-Type&#39;: &#39;application/x-www-form-urlencoded&#39;, }, }; . The code block is telling us how we get the data of the covid cases and then formatting it in a row and column. | It formats the countries name, cases, deaths, active cases in a row using the api. | . // fetch the API fetch(url, headers) // response is a RESTful &quot;promise&quot; on any successful fetch .then(response =&gt; { // check for response errors if (response.status !== 200) { const errorMsg = &#39;Database response error: &#39; + response.status; console.log(errorMsg); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = errorMsg; tr.appendChild(td); resultContainer.appendChild(tr); return; } // valid response will have json data response.json().then(data =&gt; { console.log(data); console.log(data.world_total) // World Data document.getElementById(&quot;time&quot;).innerHTML = data.world_total.statistic_taken_at; document.getElementById(&quot;total_cases&quot;).innerHTML = data.world_total.total_cases; document.getElementById(&quot;total_deaths&quot;).innerHTML = data.world_total.total_deaths; document.getElementById(&quot;active_cases&quot;).innerHTML = data.world_total.active_cases; // Country data for (const row of data.countries_stat) { console.log(row); // tr for each row const tr = document.createElement(&quot;tr&quot;); // td for each column const name = document.createElement(&quot;td&quot;); const cases = document.createElement(&quot;td&quot;); const deaths = document.createElement(&quot;td&quot;); const active = document.createElement(&quot;td&quot;); // data is specific to the API name.innerHTML = row.country_name; cases.innerHTML = row.cases; deaths.innerHTML = row.deaths; active.innerHTML = row.active_cases; // this builds td&#39;s into tr tr.appendChild(name); tr.appendChild(cases); tr.appendChild(deaths); tr.appendChild(active); // add HTML to container resultContainer.appendChild(tr); } }) }) . The code block below shows how the code catches fetch errors when the server is blocked. | So if tr or td has an error, the code will detect the error. | . // catch fetch errors (ie ACCESS to server blocked) .catch(err =&gt; { console.error(err); const tr = document.createElement(&quot;tr&quot;); const td = document.createElement(&quot;td&quot;); td.innerHTML = err; tr.appendChild(td); resultContainer.appendChild(tr); }); &lt;/script&gt; .",
            "url": "https://eligilmour.github.io/Eli-1/2022/10/18/writingaboutcode.html",
            "relUrl": "/2022/10/18/writingaboutcode.html",
            "date": " • Oct 18, 2022"
        }
        
    
  
    
        ,"post54": {
            "title": "Python Web API Endpoints using Jokes",
            "content": "Model for API . We will begin our journey into APIs by creating and thinking about data. We have learned about Python Lists and dictionaries. In this data example, we are going to make &quot;the best computer jokes ever ;)&quot; and serve them over the Internet. The ultimate objective is to allow our viewers to provide a like or dislike on each of our jokes. . This code planning begins by coming up with some jokes and defining a data &quot;model&quot; to keep and manage the jokes. . jokes_data contains a list of dictionary records containing joke and reactions:haha or boohoo - joke_list contains collection of jokes we will put into jokes_data | . | Next comes some functions to interact with our jokes . def initJokes(): initializes jokes_data | def getJokes(): returns the complete list of jokes | def getJoke(): returns a single joke from our list | ... many more function can be examined by reading comments below ... | . | . import random jokes_data = [] joke_list = [ &quot;If you give someone a program... you will frustrate them for a day; if you teach them how to program... you will &quot; &quot;frustrate them for a lifetime.&quot;, &quot;Q: Why did I divide sin by tan? A: Just cos.&quot;, &quot;UNIX is basically a simple operating system... but you have to be a genius to understand the simplicity.&quot;, &quot;Enter any 11-digit prime number to continue.&quot;, &quot;If at first you don&#39;t succeed; call it version 1.0.&quot;, &quot;Java programmers are some of the most materialistic people I know, very object-oriented&quot;, &quot;The oldest computer can be traced back to Adam and Eve. It was an apple but with extremely limited memory. Just &quot; &quot;1 byte. And then everything crashed.&quot;, &quot;Q: Why did Wi-Fi and the computer get married? A: Because they had a connection&quot;, &quot;Bill Gates teaches a kindergarten class to count to ten. 1, 2, 3, 3.1, 95, 98, ME, 2000, XP, Vista, 7, 8, 10.&quot;, &quot;Q: What’s a aliens favorite computer key? A: the space bar!&quot;, &quot;There are 10 types of people in the world: those who understand binary, and those who don’t.&quot;, &quot;If it wasn&#39;t for C, we’d all be programming in BASI and OBOL.&quot;, &quot;Computers make very fast, very accurate mistakes.&quot;, &quot;Q: Why is it that programmers always confuse Halloween with Christmas? A: Because 31 OCT = 25 DEC.&quot;, &quot;Q: How many programmers does it take to change a light bulb? A: None. It’s a hardware problem.&quot;, &quot;The programmer got stuck in the shower because the instructions on the shampoo bottle said: Lather, Rinse, Repeat.&quot;, &quot;Q: What is the biggest lie in the entire universe? A: I have read and agree to the Terms and Conditions.&quot;, &#39;An SQL statement walks into a bar and sees two tables. It approaches, and asks may I join you?&#39; ] # Initialize jokes def initJokes(): # setup jokes into a dictionary with id, joke, haha, boohoo item_id = 0 for item in joke_list: jokes_data.append({&quot;id&quot;: item_id, &quot;joke&quot;: item, &quot;haha&quot;: 0, &quot;boohoo&quot;: 0}) item_id += 1 # prime some haha responses for i in range(200): id = getRandomJoke()[&#39;id&#39;] addJokeHaHa(id) # prime some haha responses for i in range(50): id = getRandomJoke()[&#39;id&#39;] addJokeBooHoo(id) # Return all jokes from jokes_data def getJokes(): return(jokes_data) # Joke getter def getJoke(id): return(jokes_data[id]) # Return random joke from jokes_data def getRandomJoke(): return(random.choice(jokes_data)) # Liked joke def favoriteJoke(): best = 0 bestID = -1 for joke in getJokes(): if joke[&#39;haha&#39;] &gt; best: best = joke[&#39;haha&#39;] bestID = joke[&#39;id&#39;] return jokes_data[bestID] # Jeered joke def jeeredJoke(): worst = 0 worstID = -1 for joke in getJokes(): if joke[&#39;boohoo&#39;] &gt; worst: worst = joke[&#39;boohoo&#39;] worstID = joke[&#39;id&#39;] return jokes_data[worstID] # Add to haha for requested id def addJokeHaHa(id): jokes_data[id][&#39;haha&#39;] = jokes_data[id][&#39;haha&#39;] + 1 return jokes_data[id][&#39;haha&#39;] # Add to boohoo for requested id def addJokeBooHoo(id): jokes_data[id][&#39;boohoo&#39;] = jokes_data[id][&#39;boohoo&#39;] + 1 return jokes_data[id][&#39;boohoo&#39;] # Pretty Print joke def printJoke(joke): print(joke[&#39;id&#39;], joke[&#39;joke&#39;], &quot; n&quot;, &quot;haha:&quot;, joke[&#39;haha&#39;], &quot; n&quot;, &quot;boohoo:&quot;, joke[&#39;boohoo&#39;], &quot; n&quot;) # Number of jokes def countJokes(): return len(jokes_data) # Test Joke Model if __name__ == &quot;__main__&quot;: initJokes() # initialize jokes # Most likes and most jeered best = favoriteJoke() print(&quot;Most liked&quot;, best[&#39;haha&#39;]) printJoke(best) worst = jeeredJoke() print(&quot;Most jeered&quot;, worst[&#39;boohoo&#39;]) printJoke(worst) # Random joke print(&quot;Random joke&quot;) printJoke(getRandomJoke()) # Count of Jokes print(&quot;Jokes Count: &quot; + str(countJokes())) . Most liked 19 1 Q: Why did I divide sin by tan? A: Just cos. haha: 19 boohoo: 1 Most jeered 7 5 Java programmers are some of the most materialistic people I know, very object-oriented haha: 13 boohoo: 7 Random joke 0 If you give someone a program... you will frustrate them for a day; if you teach them how to program... you will frustrate them for a lifetime. haha: 15 boohoo: 0 Jokes Count: 18 . Backend Interface for Web API (Control) . An application programming interface (API) is the medium by which different systems of software interact. In our applications we have two big systems:1. Python Backend that stores data beyond a single Web page2. GH Pages/Fastpages Frontend that is responsible for presenting data . To communicate data between Frontend and Backend, this section Backend code provides and interface to the Frontend using a Web Service Endpoint. Examples of endpoints are listed below and can be typed within a browser, which will return JSON data: . https://flask.nighthawkcodingsociety.com/api/jokes | https://flask.nighthawkcodingsociety.com/api/jokes/2 | https://flask.nighthawkcodingsociety.com/api/jokes/random | . As you can see, these Endpoints return JSON. They are NOT that readable by normal humans. However, they are very effective in passing requested data across the Internet. The Frontend code is responsible for formatting and presenting and interface that allows the typical computer user to interact with this data. . The next cell of code is Creating Endpoints that return JSON. This allows developers in the Frontend to interact with Backend data. API is a contract between the Frontend and Backend on how to share data. . FYI, there is NO output from this section . . from flask import Blueprint, jsonify # jsonify creates an endpoint response object from flask_restful import Api, Resource # used for REST API building import requests # used for testing import random # Blueprints allow this code to be procedurally abstracted from main.py, meaning code is not all in one place app_api = Blueprint(&#39;api&#39;, __name__, url_prefix=&#39;/api/jokes&#39;) # endpoint prefix avoid redundantly typing /api/jokes over and over # API generator https://flask-restful.readthedocs.io/en/latest/api.html#id1 api = Api(app_api) class JokesAPI: # not implemented, this would be where we would allow creation of a new Joke class _Create(Resource): def post(self, joke): pass # getJokes() class _Read(Resource): def get(self): return jsonify(getJokes()) # getJoke(id) class _ReadID(Resource): def get(self, id): return jsonify(getJoke(id)) # getRandomJoke() class _ReadRandom(Resource): def get(self): return jsonify(getRandomJoke()) # getRandomJoke() class _ReadCount(Resource): def get(self): count = countJokes() countMsg = {&#39;count&#39;: count} return jsonify(countMsg) # put method: addJokeHaHa class _UpdateLike(Resource): def put(self, id): addJokeHaHa(id) return jsonify(getJoke(id)) # put method: addJokeBooHoo class _UpdateJeer(Resource): def put(self, id): addJokeBooHoo(id) return jsonify(getJoke(id)) # building RESTapi interfaces, these routes are added to Web Server http://&lt;server&lt;/api/jokes api.add_resource(_Create, &#39;/create/&lt;string:joke&gt;&#39;) api.add_resource(_Read, &#39;/&#39;) # default, which returns all jokes api.add_resource(_ReadID, &#39;/&lt;int:id&gt;&#39;) api.add_resource(_ReadRandom, &#39;/random&#39;) api.add_resource(_ReadCount, &#39;/count&#39;) api.add_resource(_UpdateLike, &#39;/like/&lt;int:id&gt;/&#39;) api.add_resource(_UpdateJeer, &#39;/jeer/&lt;int:id&gt;/&#39;) . Frontend (View Simulation) and Hacks . This python codes tests endpoints on a server. This can be handy for development and testing when making modifications to the Jokes Web APIs. This code works off of the server endpoint/url, not from code cells above it in this notebook. . To work with this code and make observation for learning... . Run a local server from flask_portfolio project and the change server variable to be local | Observe the requests endpoints and the output, see if you can observe what is happening/changing on put requests | The &quot;requests&quot; are captured into a List, the List is used in the for loop to extract from RESTful API format. | Try running this with Debugging and observe what data is being created at each step (Required) | Try to format this data in Python print statements to be more readable (Required) | Start and stop local server and observe errors | . server = &#39;https://flask.nighthawkcodingsociety.com/&#39; # run from web server url = server + &quot;api/jokes/&quot; responses = [] # responses list # Get the count of jokes on server count_response = requests.get(url+&quot;count&quot;) count_json = count_response.json() count = count_json[&#39;count&#39;] # Update likes/dislikes test sequence using random joke num = str(random.randint(0, count-1)) # test a random record responses.append( requests.get(url+num) # Get/read joke by id ) responses.append( requests.put(url+&quot;like/&quot;+num) # Put/add to like count ) responses.append( requests.put(url+&quot;jeer/&quot;+num) # Put/add to jeer count ) # Get a random joke responses.append( requests.get(url+&quot;random&quot;) # Get/read a random joke ) # Cycle through and print responses for response in responses: print(response) try: print(response.json()) except: print(&quot;data error&quot;) . NameError Traceback (most recent call last) /home/eli/vscode/Eli-1/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb Cell 7 in &lt;cell line: 7&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/vscode/Eli-1/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb#X11sdnNjb2RlLXJlbW90ZQ%3D%3D?line=3&#39;&gt;4&lt;/a&gt; responses = [] # responses list &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/vscode/Eli-1/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb#X11sdnNjb2RlLXJlbW90ZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; # Get the count of jokes on server -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/vscode/Eli-1/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb#X11sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; count_response = requests.get(url+&#34;count&#34;) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/vscode/Eli-1/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb#X11sdnNjb2RlLXJlbW90ZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; count_json = count_response.json() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/eli/vscode/Eli-1/_notebooks/2022-10-17-PBL-webapi_tutorial.ipynb#X11sdnNjb2RlLXJlbW90ZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; count = count_json[&#39;count&#39;] NameError: name &#39;requests&#39; is not defined .",
            "url": "https://eligilmour.github.io/Eli-1/techtalk/webapi",
            "relUrl": "/techtalk/webapi",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post55": {
            "title": "Internet Quiz",
            "content": "Notes (Video 1) . Packet: small amount of data sent over. Each pakect also includes the source and destination of information. | Computer network: a group of interconnected computing devices capable of sending and receiving data. | Packet switching: A message is broken up into small packets and sent in any order. Then they are reassembled by the recipient’s device. | Routing: is the process of finding a path from sender to receiver. | Bandwidth is measured in bits ber second. | . Notes (video 2) . Open system Interconnect: The layers you have to go through to communicate 7 groups of protocols. | Transmission control protocol: Establishes a common standard for how to send messages between devices on the internet. | Each NIC has a unique adress associated with it called a media access control adress. It is used for local hops. | The most common netwrok access protocol is ethernet. | Routers are special purpose computer with a MAC adress. | http: How to ask and recieve data from web servers. | https: like http, but with security. Usually uses TCP port 443. | . . Corrections . Q2. Which of the following is a primary reason for the use of open protocols on the Internet? . My answer: Open protocols allow devices to specify how data packets are to be routed on the Internet in advance. | Correct Answer: Open protocols provide a way to standardize data transmission between different devices. | . Q3. Which of the following best describes the relationship between the World Wide Web and the Internet? . My answer: The World Wide Web is a protocol that is accessed using a data stream called the Internet. | Correct Answer: The World Wide Web is a system of linked pages, programs, and files that is accessed via a network called the Internet. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/10/16/4.1quiz.html",
            "relUrl": "/fastpages/markdown/2022/10/16/4.1quiz.html",
            "date": " • Oct 16, 2022"
        }
        
    
  
    
        ,"post56": {
            "title": "API Stocks",
            "content": "from polygon import RESTClient from typing import cast from urllib3 import HTTPResponse # API key for the stocks client = RESTClient(&quot;w4oXBFSyC3bTkpJeVwSnKt8iuwBgMeMy&quot;) # api key in quotes . from polygon import RESTClient from typing import cast from urllib3 import HTTPResponse import time client = RESTClient(&quot;w4oXBFSyC3bTkpJeVwSnKt8iuwBgMeMy&quot;) # api_key is used aggs = client.get_aggs(&quot;AAPL&quot;, 1, &quot;month&quot;, &quot;2021-01-01&quot;, &quot;2021-12-01&quot;) data = [] for i in range (12): data.append({&quot;2021-&quot; +str(i + 1) + &quot;-1:&quot;: aggs[i].open}) data.append({&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot;: aggs[i].close}) print(&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot; + str(aggs[i].open)) print(&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot; + str(aggs[i].close)) time.sleep(12) print(data) . 2021-1-1:133.52 2021-1-1:131.96 2021-2-1:133.75 2021-2-1:121.26 2021-3-1:123.75 2021-3-1:122.15 2021-4-1:123.66 2021-4-1:131.46 2021-5-1:132.04 2021-5-1:124.61 2021-6-1:125.08 2021-6-1:136.96 2021-7-1:136.6 2021-7-1:145.86 2021-8-1:146.36 2021-8-1:151.83 2021-9-1:152.83 2021-9-1:141.5 2021-10-1:141.9 2021-10-1:149.8 2021-11-1:148.985 2021-11-1:165.3 2021-12-1:167.48 2021-12-1:177.57 [{&#39;2021-1-1:&#39;: 133.52}, {&#39;2021-1-1:&#39;: 131.96}, {&#39;2021-2-1:&#39;: 133.75}, {&#39;2021-2-1:&#39;: 121.26}, {&#39;2021-3-1:&#39;: 123.75}, {&#39;2021-3-1:&#39;: 122.15}, {&#39;2021-4-1:&#39;: 123.66}, {&#39;2021-4-1:&#39;: 131.46}, {&#39;2021-5-1:&#39;: 132.04}, {&#39;2021-5-1:&#39;: 124.61}, {&#39;2021-6-1:&#39;: 125.08}, {&#39;2021-6-1:&#39;: 136.96}, {&#39;2021-7-1:&#39;: 136.6}, {&#39;2021-7-1:&#39;: 145.86}, {&#39;2021-8-1:&#39;: 146.36}, {&#39;2021-8-1:&#39;: 151.83}, {&#39;2021-9-1:&#39;: 152.83}, {&#39;2021-9-1:&#39;: 141.5}, {&#39;2021-10-1:&#39;: 141.9}, {&#39;2021-10-1:&#39;: 149.8}, {&#39;2021-11-1:&#39;: 148.985}, {&#39;2021-11-1:&#39;: 165.3}, {&#39;2021-12-1:&#39;: 167.48}, {&#39;2021-12-1:&#39;: 177.57}] . from polygon import RESTClient from typing import cast from urllib3 import HTTPResponse import time client = RESTClient(&quot;w4oXBFSyC3bTkpJeVwSnKt8iuwBgMeMy&quot;) # api_key is used aggs = client.get_aggs(&quot;TSLA&quot;, 1, &quot;month&quot;, &quot;2021-01-01&quot;, &quot;2021-12-01&quot;) data = [] for i in range (12): data.append({&quot;2021-&quot; +str(i + 1) + &quot;-1:&quot;: aggs[i].open}) data.append({&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot;: aggs[i].close}) print(&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot; + str(aggs[i].open)) print(&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot; + str(aggs[i].close)) time.sleep(12) print(data) . 2021-1-1:239.82 2021-1-1:264.51 2021-2-1:271.43 2021-2-1:225.1667 2021-3-1:230.0367 2021-3-1:222.6433 2021-4-1:229.4567 2021-4-1:236.48 2021-5-1:234.6 2021-5-1:208.4067 2021-6-1:209.2667 2021-6-1:226.5667 2021-7-1:227.9733 2021-7-1:229.0667 2021-8-1:233.3333 2021-8-1:245.24 2021-9-1:244.6933 2021-9-1:258.4933 2021-10-1:259.4667 2021-10-1:371.3333 2021-11-1:381.6667 2021-11-1:381.5867 2021-12-1:386.8983 2021-12-1:352.26 [{&#39;2021-1-1:&#39;: 239.82}, {&#39;2021-1-1:&#39;: 264.51}, {&#39;2021-2-1:&#39;: 271.43}, {&#39;2021-2-1:&#39;: 225.1667}, {&#39;2021-3-1:&#39;: 230.0367}, {&#39;2021-3-1:&#39;: 222.6433}, {&#39;2021-4-1:&#39;: 229.4567}, {&#39;2021-4-1:&#39;: 236.48}, {&#39;2021-5-1:&#39;: 234.6}, {&#39;2021-5-1:&#39;: 208.4067}, {&#39;2021-6-1:&#39;: 209.2667}, {&#39;2021-6-1:&#39;: 226.5667}, {&#39;2021-7-1:&#39;: 227.9733}, {&#39;2021-7-1:&#39;: 229.0667}, {&#39;2021-8-1:&#39;: 233.3333}, {&#39;2021-8-1:&#39;: 245.24}, {&#39;2021-9-1:&#39;: 244.6933}, {&#39;2021-9-1:&#39;: 258.4933}, {&#39;2021-10-1:&#39;: 259.4667}, {&#39;2021-10-1:&#39;: 371.3333}, {&#39;2021-11-1:&#39;: 381.6667}, {&#39;2021-11-1:&#39;: 381.5867}, {&#39;2021-12-1:&#39;: 386.8983}, {&#39;2021-12-1:&#39;: 352.26}] . from polygon import RESTClient from typing import cast from urllib3 import HTTPResponse import time client = RESTClient(&quot;w4oXBFSyC3bTkpJeVwSnKt8iuwBgMeMy&quot;) # api_key is used aggs = client.get_aggs(&quot;GME&quot;, 1, &quot;month&quot;, &quot;2021-01-01&quot;, &quot;2021-12-01&quot;) data = [] for i in range (12): data.append({&quot;2021-&quot; +str(i + 1) + &quot;-1:&quot;: aggs[i].open}) data.append({&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot;: aggs[i].close}) print(&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot; + str(aggs[i].open)) print(&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot; + str(aggs[i].close)) time.sleep(12) print(data) . 2021-1-1:4.75 2021-1-1:81.25 2021-2-1:79.14 2021-2-1:25.435 2021-3-1:26.135 2021-3-1:47.455 2021-4-1:48.34 2021-4-1:43.3975 2021-5-1:44.3725 2021-5-1:55.5 2021-6-1:58.37 2021-6-1:53.535 2021-7-1:53.35 2021-7-1:40.28 2021-8-1:40.5 2021-8-1:54.56 2021-9-1:56 2021-9-1:43.8675 2021-10-1:44.85 2021-10-1:45.8775 2021-11-1:45.6325 2021-11-1:49.0525 2021-12-1:49.85 2021-12-1:37.0975 [{&#39;2021-1-1:&#39;: 4.75}, {&#39;2021-1-1:&#39;: 81.25}, {&#39;2021-2-1:&#39;: 79.14}, {&#39;2021-2-1:&#39;: 25.435}, {&#39;2021-3-1:&#39;: 26.135}, {&#39;2021-3-1:&#39;: 47.455}, {&#39;2021-4-1:&#39;: 48.34}, {&#39;2021-4-1:&#39;: 43.3975}, {&#39;2021-5-1:&#39;: 44.3725}, {&#39;2021-5-1:&#39;: 55.5}, {&#39;2021-6-1:&#39;: 58.37}, {&#39;2021-6-1:&#39;: 53.535}, {&#39;2021-7-1:&#39;: 53.35}, {&#39;2021-7-1:&#39;: 40.28}, {&#39;2021-8-1:&#39;: 40.5}, {&#39;2021-8-1:&#39;: 54.56}, {&#39;2021-9-1:&#39;: 56}, {&#39;2021-9-1:&#39;: 43.8675}, {&#39;2021-10-1:&#39;: 44.85}, {&#39;2021-10-1:&#39;: 45.8775}, {&#39;2021-11-1:&#39;: 45.6325}, {&#39;2021-11-1:&#39;: 49.0525}, {&#39;2021-12-1:&#39;: 49.85}, {&#39;2021-12-1:&#39;: 37.0975}] . from polygon import RESTClient from typing import cast from urllib3 import HTTPResponse import time client = RESTClient(&quot;w4oXBFSyC3bTkpJeVwSnKt8iuwBgMeMy&quot;) # api_key is used aggs = client.get_aggs(&quot;GOOGL&quot;, 1, &quot;month&quot;, &quot;2021-01-01&quot;, &quot;2021-12-01&quot;) data = [] for i in range (12): data.append({&quot;2021-&quot; +str(i + 1) + &quot;-1:&quot;: aggs[i].open}) data.append({&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot;: aggs[i].close}) print(&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot; + str(aggs[i].open)) print(&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot; + str(aggs[i].close)) time.sleep(12) print(data) . 2021-1-1:88 2021-1-1:91.368 2021-2-1:92.2293 2021-2-1:101.0955 2021-3-1:102.4 2021-3-1:103.126 2021-4-1:104.6125 2021-4-1:117.675 2021-5-1:118.2455 2021-5-1:117.8425 2021-6-1:118.722 2021-6-1:122.0895 2021-7-1:121.725 2021-7-1:134.7265 2021-8-1:135.117 2021-8-1:144.6975 2021-9-1:145 2021-9-1:133.676 2021-10-1:134.4475 2021-10-1:148.046 2021-11-1:148.046 2021-11-1:141.8975 2021-12-1:144 2021-12-1:144.852 [{&#39;2021-1-1:&#39;: 88}, {&#39;2021-1-1:&#39;: 91.368}, {&#39;2021-2-1:&#39;: 92.2293}, {&#39;2021-2-1:&#39;: 101.0955}, {&#39;2021-3-1:&#39;: 102.4}, {&#39;2021-3-1:&#39;: 103.126}, {&#39;2021-4-1:&#39;: 104.6125}, {&#39;2021-4-1:&#39;: 117.675}, {&#39;2021-5-1:&#39;: 118.2455}, {&#39;2021-5-1:&#39;: 117.8425}, {&#39;2021-6-1:&#39;: 118.722}, {&#39;2021-6-1:&#39;: 122.0895}, {&#39;2021-7-1:&#39;: 121.725}, {&#39;2021-7-1:&#39;: 134.7265}, {&#39;2021-8-1:&#39;: 135.117}, {&#39;2021-8-1:&#39;: 144.6975}, {&#39;2021-9-1:&#39;: 145}, {&#39;2021-9-1:&#39;: 133.676}, {&#39;2021-10-1:&#39;: 134.4475}, {&#39;2021-10-1:&#39;: 148.046}, {&#39;2021-11-1:&#39;: 148.046}, {&#39;2021-11-1:&#39;: 141.8975}, {&#39;2021-12-1:&#39;: 144}, {&#39;2021-12-1:&#39;: 144.852}] . from polygon import RESTClient from typing import cast from urllib3 import HTTPResponse import time client = RESTClient(&quot;w4oXBFSyC3bTkpJeVwSnKt8iuwBgMeMy&quot;) # api_key is used aggs = client.get_aggs(&quot;AMZN&quot;, 1, &quot;month&quot;, &quot;2021-01-01&quot;, &quot;2021-12-01&quot;) data = [] for i in range (12): data.append({&quot;2021-&quot; +str(i + 1) + &quot;-1:&quot;: aggs[i].open}) data.append({&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot;: aggs[i].close}) print(&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot; + str(aggs[i].open)) print(&quot;2021-&quot; + str(i + 1) + &quot;-1:&quot; + str(aggs[i].close)) time.sleep(12) print(data) . 2021-1-1:163.5 2021-1-1:160.31 2021-2-1:162.118 2021-2-1:154.6465 2021-3-1:156.3945 2021-3-1:154.704 2021-4-1:155.897 2021-4-1:173.371 2021-5-1:174.2365 2021-5-1:161.1535 2021-6-1:162.1748 2021-6-1:172.008 2021-7-1:171.7305 2021-7-1:166.3795 2021-8-1:167.655 2021-8-1:173.5395 2021-9-1:174.8198 2021-9-1:164.252 2021-10-1:164.4505 2021-10-1:168.6215 2021-11-1:168.09 2021-11-1:175.3535 2021-12-1:177.25 2021-12-1:166.717 [{&#39;2021-1-1:&#39;: 163.5}, {&#39;2021-1-1:&#39;: 160.31}, {&#39;2021-2-1:&#39;: 162.118}, {&#39;2021-2-1:&#39;: 154.6465}, {&#39;2021-3-1:&#39;: 156.3945}, {&#39;2021-3-1:&#39;: 154.704}, {&#39;2021-4-1:&#39;: 155.897}, {&#39;2021-4-1:&#39;: 173.371}, {&#39;2021-5-1:&#39;: 174.2365}, {&#39;2021-5-1:&#39;: 161.1535}, {&#39;2021-6-1:&#39;: 162.1748}, {&#39;2021-6-1:&#39;: 172.008}, {&#39;2021-7-1:&#39;: 171.7305}, {&#39;2021-7-1:&#39;: 166.3795}, {&#39;2021-8-1:&#39;: 167.655}, {&#39;2021-8-1:&#39;: 173.5395}, {&#39;2021-9-1:&#39;: 174.8198}, {&#39;2021-9-1:&#39;: 164.252}, {&#39;2021-10-1:&#39;: 164.4505}, {&#39;2021-10-1:&#39;: 168.6215}, {&#39;2021-11-1:&#39;: 168.09}, {&#39;2021-11-1:&#39;: 175.3535}, {&#39;2021-12-1:&#39;: 177.25}, {&#39;2021-12-1:&#39;: 166.717}] .",
            "url": "https://eligilmour.github.io/Eli-1/2022/10/10/apistocks.html",
            "relUrl": "/2022/10/10/apistocks.html",
            "date": " • Oct 10, 2022"
        }
        
    
  
    
        ,"post57": {
            "title": "Stocks Final project Plan",
            "content": "The Idea . we are going to use polygon.io which is an api and we are creating a stock website/app that shows the three big stock funds and it will display how well each stock has done in the past 2-3 years. | . Free perks with Polygon.io . End of Day Data | 5 API Calls / Minute | 2 Years Historical Data | 100% Market Coverage | Reference Data | Fundamental Data | Corporate Actions | Aggregate Bars | . Team roles . jeffery -&gt; DevOps | Josh -&gt; Frontend | Chris -&gt; Backend | Khalid -&gt; Frontend | Eli -&gt; Backend | ryan -&gt; scrum master | . College board criteria . Program Purpose and Function purpose Create a web application that provides data for people when investing in the stock market function User selects what stock they want data for Web application provides data in the form a graphs and a table that assist you with investing | Data Abstraction We will collect data from an api in the form of dictionaries The data collected from the api will be used to create graphs and tables | Managing Complexity Data will be based on time(x-axis) and stock value(y-axis) | Procedural Abstraction The option to choose between different graphs and data tables and see different results The option to compare different stocks to another on the same graph | Algorithm Implementation TBD when we go over this in class | Testing case sensitive |",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/10/09/stockapp.html",
            "relUrl": "/fastpages/markdown/2022/10/09/stockapp.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post58": {
            "title": "Identifying and Correcting Errors Quiz",
            "content": ". Corrections . I got question 3 wrong on the 1.4 quiz for college board. I had to select two numbers that would be a good test number for the function. Next time I should run each number in my head and test to see which one is greater or less than the number selected. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/10/09/1.4quiz.html",
            "relUrl": "/fastpages/markdown/2022/10/09/1.4quiz.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post59": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;jcmbea0fa2ff5msh7f14bf69be38ca6p175482jsn6c4988114560&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;message&#34;:&#34;You are not subscribed to this API.&#34;} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://eligilmour.github.io/Eli-1/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post60": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 0 while i &lt;= 10: odds.append(i) i += 2 print(odds) . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 0): odds.append(numbers[i]) print(odds) . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) if numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . . Important: Pay attention! It&#8217;s important. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99, } total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) print(&quot;total&quot;) total= menu[item] #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 total 3.99 . . Important: Pay attention! It&#8217;s important. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99, } total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) print(&quot;total&quot;) total= menu[item] #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 total 1.99 . . Important: Pay attention! It&#8217;s important. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99, } total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) print(&quot;total&quot;) total= menu[item] #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 total 0.99 . Errors . I had troble writing code with while loop, where I looked at past assignments and tried to input while loop and switch the data about burger, fries and drink. | But I tried many times and there was always an error so I had to write some basic code to just display the price of what choice of item the user chose. | .",
            "url": "https://eligilmour.github.io/Eli-1/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post61": {
            "title": "College Board quiz's",
            "content": ". Problems or confusion with problem sets . I was pretty confused on most of the quiz because I didn’t really know what each of those blocks of code mean. I had trouble understanding what each coefficent means and how each input to output works .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/10/02/collegeboard.html",
            "relUrl": "/fastpages/markdown/2022/10/02/collegeboard.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post62": {
            "title": "Final Project plan",
            "content": "Scrum board . . First Idea . data abstraction with a 2D array when loading the board and pieces. | procedural abstraction with how the player interacts with the screen and interacts with the pieces on the board. | . Important: Pay attention! It’s important. . Team roles . jeffery -&gt; DevOps | Josh -&gt; Frontend | Chris -&gt; Backend | Khalid -&gt; Frontend | Eli -&gt; Backend | ryan -&gt; scrum master | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/09/28/teamroles.html",
            "relUrl": "/fastpages/markdown/2022/09/28/teamroles.html",
            "date": " • Sep 28, 2022"
        }
        
    
  
    
        ,"post63": {
            "title": "Javascript",
            "content": "console.log(&quot;whats up everyone&quot;); . whats up everyone . var msg = &quot;whats up everyone!&quot;; console.log(msg); . whats up everyone! . function logIt(output) { console.log(output); } logIt(msg); . whats up everyone! . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;Hello, Students!&quot;); logIt(2022) . Reuse of logIT Hello, Students! 2022 . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); // String logItType(2022); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . Looking at dynamic nature of types in JavaScript string ; hello number ; 2022 object ; [ 1, 2, 3 ] . function PrintType(output) { // function to output data type and data into terminal console.log(typeof output, &quot;, &quot;, output); } // define a function to hold data for a Person function Person(name, Grad, residence) { this.name = name; this.Grad = Grad; this.residence = residence; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, age: this.age, residence: this.residence, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable student var student = new Person(&quot;elijah&quot;, 2024, &quot;SanDiego&quot;); // object type is easy to work with in JavaScript PrintType(student); // before role PrintType(student.toJSON()); // output of Object and JSON/string associated with student student.setRole(&quot;Student&quot;); // set the role PrintType(student); PrintType(student.toJSON()); . object , Person { name: &#39;elijah&#39;, Grad: 2024, residence: &#39;SanDiego&#39;, role: &#39;&#39; } string , {&#34;name&#34;:&#34;elijah&#34;,&#34;residence&#34;:&#34;SanDiego&#34;,&#34;role&#34;:&#34;&#34;} object , Person { name: &#39;elijah&#39;, Grad: 2024, residence: &#39;SanDiego&#39;, role: &#39;Student&#39; } string , {&#34;name&#34;:&#34;elijah&#34;,&#34;residence&#34;:&#34;SanDiego&#34;,&#34;role&#34;:&#34;Student&#34;} . // define a student Array of Person(s) var students = [ new Person(&quot;Elijah &quot;, 2024, &quot;San Diego&quot;), new Person(&quot;Josh&quot;, 2024, &quot;San Diego&quot;), new Person(&quot;Chris&quot;, 2024, &quot;San Diego&quot;), new Person(&quot;Jeffery&quot;, 2023, &quot;San Diego&quot;) ]; var teacher = new Person(&quot;Mr. M&quot;, &quot;?&quot;, &quot;San Diego&quot;) // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // output of Objects and JSON in CompSci classroom PrintType(compsci.classroom); // constructed classroom object PrintType(compsci.classroom[0].name); // abstract 1st objects name PrintType(compsci.json[0]); // show json conversion of 1st object to string PrintType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object , [ Person { name: &#39;Mr. M&#39;, Grad: &#39;?&#39;, residence: &#39;San Diego&#39;, role: &#39;Teacher&#39; }, Person { name: &#39;Elijah &#39;, Grad: 2024, residence: &#39;San Diego&#39;, role: &#39;Student&#39; }, Person { name: &#39;Josh&#39;, Grad: 2024, residence: &#39;San Diego&#39;, role: &#39;Student&#39; }, Person { name: &#39;Chris&#39;, Grad: 2024, residence: &#39;San Diego&#39;, role: &#39;Student&#39; }, Person { name: &#39;Jeffery&#39;, Grad: 2023, residence: &#39;San Diego&#39;, role: &#39;Student&#39; } ] string , Mr. M string , {&#34;name&#34;:&#34;Mr. M&#34;,&#34;residence&#34;:&#34;San Diego&#34;,&#34;role&#34;:&#34;Teacher&#34;} object , { name: &#39;Mr. M&#39;, residence: &#39;San Diego&#39;, role: &#39;Teacher&#39; } . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Grad&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Residence&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.Grad + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.residence + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGradResidenceRole . Mr. M | ? | San Diego | Teacher | Elijah | 2024 | San Diego | Student | Josh | 2024 | San Diego | Student | Chris | 2024 | San Diego | Student | Jeffery | 2023 | San Diego | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://eligilmour.github.io/Eli-1/2022/09/26/javascript.html",
            "relUrl": "/2022/09/26/javascript.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post64": {
            "title": "Psychology Notes",
            "content": "Vocabulary . Effort . You have to put in a little work and time to chnage your life for the better and have better outcomes in the future. | It won’t come over time, you have to keep working at it. | . social connections . Help other for exchnage for something greater. | Help other people’s need before ours. | Meet new people everyday | . Gratitude . Be gratful for what we have and think of positive things and cancel out the negative things in your life. | . Health . 7-8+ hours of sleep | Eat 3 meals a day with enough carbs and proteins to fuel the body. | Exercise 30-40+ min a day. | . Time . Time famine | Time affluence | Value time more than anything | . Personal Gratitude list: . Being able to be on the feild playing on military night with the fly over. | Going to see my brothers this weekend at college in two states I have never been in. | Had a nice team meal on thursday with the football team. | . Personal Goals: . Get an A on my next math test. | Win our next football game. | go to the louisville football game in Kentucky. | Get to see friends after being gone for a week. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/09/20/psychology.html",
            "relUrl": "/fastpages/markdown/2022/09/20/psychology.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post65": {
            "title": "Collaboration Notes",
            "content": "Notes . Pair programming One programmer is the driver, who writes code, and the other programmer is the observer who reviews each line of code as it is typed in | The two programmers work together as a pair | . | Think,Pair,Share The first step is for each of the students to think through each problem by themselves, and then you come too as a group and collaborate, and then share out to the class. | . | computng collaboration Collaboration that includes diverse perspectives that helps avoid bias of the development of computing innovations. | . | . What I took from this videos . After watching these videos, I see how important collaboration is for heading towards sucess. For example, computer science takes alot of communication and collaboration for each of the students to find sucess in their projects. All the time you need to ask fellow students for help on something or their perspective on your project. | .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/09/20/collabrationnotes1.html",
            "relUrl": "/fastpages/markdown/2022/09/20/collabrationnotes1.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post66": {
            "title": "Making a quiz using App Lab",
            "content": "Design Process . 1. Choosing a topic . Before I started to make my quiz I decided I wanted to choose a topic that was revalant to me and that others can learn from when takng my quiz. I chose to create my quiz about the math I am doing in my math class.( AFA ) . 2. Writing the questions . After I chose my topic for my quiz, I searched through my math notebook to find questions on the topics we work on in class. I created these questions around what to expect in teh AFA math class. . 3. Creating my Quiz . The first step to creating my quiz was the homepage and I created something that was related to my topic, but also added some fun colors to make the homepage more intreasting. My quiz will have three questions that you have to answer in a different way each time. Including multiple choice, dropdown menu( true or false ), and check all that apply. Then at the end it will take you to the page that tells you your score. . 4. Challenges . Some challenges that I faced while creating my quiz using code.org was knowing what each function does. I am not familiar with this website and there was a lot of trial and error throughout the week. . 5. successes . Their were many successes throught the week that helped me achive finishing my quiz. At the start it was pretty dificult because I didn’t know what any of the commands and functions mean, but as I played with teh software I learned how many of the functions worked. I figured out how to make a quiz using three different questions and different ways to answer each question. The first question I created a mulitiple choice question just using buttons, Then for the second question I created a check the box type answer, and lastly I created a dropdown menu type of question. . Link to quiz . here .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/09/08/codequizblog.html",
            "relUrl": "/fastpages/markdown/2022/09/08/codequizblog.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post67": {
            "title": "Python List Dictionaries Iteration",
            "content": "InfoDb . InfoDb = [] # To add data to InfoDB we must use the .append function # A dictionary is made with curly braces {} InfoDb.append({ &quot;FirstName&quot;: &quot;elijah&quot;, &quot;MiddleName&quot;: &quot;david&quot;, &quot;LastName&quot;: &quot;gilmour&quot;, &quot;DOB&quot;: &quot;august 8&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Owns_Cars&quot;: &quot;2013 nissan altima&quot;, &quot;Show&quot;: &quot;Flash&quot;, &quot;Game&quot;: &quot;warzone&quot; }) InfoDb.append({ &quot;FirstName&quot;: &quot;Christopher&quot;, &quot;MiddleName&quot;: &quot;stewart&quot;, &quot;LastName&quot;: &quot;albertson&quot;, &quot;DOB&quot;: &quot;january 20&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Owns_Cars&quot;: &quot;2022 toyota Tacoma&quot;, &quot;Show&quot;: &quot;Breaking bad&quot;, &quot;Game&quot;: &quot;GTA&quot; }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;elijah&#39;, &#39;MiddleName&#39;: &#39;david&#39;, &#39;LastName&#39;: &#39;gilmour&#39;, &#39;DOB&#39;: &#39;august 8&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Owns_Cars&#39;: &#39;2013 nissan altima&#39;, &#39;Show&#39;: &#39;Flash&#39;, &#39;Game&#39;: &#39;warzone&#39;}, {&#39;FirstName&#39;: &#39;Christopher&#39;, &#39;MiddleName&#39;: &#39;stewart&#39;, &#39;LastName&#39;: &#39;albertson&#39;, &#39;DOB&#39;: &#39;january 20&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Owns_Cars&#39;: &#39;2022 toyota Tacoma&#39;, &#39;Show&#39;: &#39;Breaking bad&#39;, &#39;Game&#39;: &#39;GTA&#39;}] . Reversed List . list = [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;] print(&#39;Regular List:&#39;, list) list.reverse() print(&#39;Reversed List:&#39;, list) . Regular List: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;] Reversed List: [&#39;6&#39;, &#39;5&#39;, &#39;4&#39;, &#39;3&#39;, &#39;2&#39;, &#39;1&#39;] . Random List . import random print(&#39;Regular List:&#39;, list) random.shuffle(list) print(&#39;Random List:&#39;, list) . Regular List: [&#39;6&#39;, &#39;5&#39;, &#39;4&#39;, &#39;3&#39;, &#39;2&#39;, &#39;1&#39;] Random List: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;6&#39;, &#39;5&#39;, &#39;4&#39;] . Loop . def print_data(d_rec): # defines function that prints data print(d_rec[&quot;FirstName&quot;], d_rec[&quot;MiddleName&quot;], d_rec[&quot;LastName&quot;]) # prints data from the dictionary print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, d_rec[&quot;Owns_Cars&quot;]) # end=&quot;&quot; make sure no return occurs print(&quot; t&quot;, &quot;Favorite show: &quot;, d_rec[&quot;Show&quot;]) print(&quot; t&quot;, &quot;Favorite game: &quot;, d_rec[&quot;Game&quot;]) # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output elijah david gilmour Residence: San Diego Birth Day: august 8 Cars: 2013 nissan altima Favorite show: Flash Favorite game: warzone Christopher stewart albertson Residence: San Diego Birth Day: january 20 Cars: 2022 toyota Tacoma Favorite show: Breaking bad Favorite game: GTA . While Loop . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output elijah david gilmour Residence: San Diego Birth Day: august 8 Cars: 2013 nissan altima Favorite show: Flash Favorite game: warzone Christopher stewart albertson Residence: San Diego Birth Day: january 20 Cars: 2022 toyota Tacoma Favorite show: Breaking bad Favorite game: GTA . Recersive Loop . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output elijah david gilmour Residence: San Diego Birth Day: august 8 Cars: 2013 nissan altima Favorite show: Flash Favorite game: warzone Christopher stewart albertson Residence: San Diego Birth Day: january 20 Cars: 2022 toyota Tacoma Favorite show: Breaking bad Favorite game: GTA . Quiz using dictionaries lists . question = [] # creates empty list question.append({ # adds dictionary with question and answer to list using .append &quot;Question&quot;: &quot;How mnay yards is a football field&quot;, &quot;Answer&quot;: &quot;120 yards&quot;, }) question.append({ &quot;Question&quot;: &quot;How many yards is the endzone&quot;, &quot;Answer&quot;: &quot;10 yards&quot;, }) question.append({ &quot;Question&quot;: &quot;How many yards is a first down penalty&quot;, &quot;Answer&quot;: &quot;10 yards&quot;, }) question.append({ &quot;Question&quot;: &quot;how many players is on the offense&quot;, &quot;Answer&quot;: &quot;11 players&quot;, }) points = 0 print(&quot;Take this quiz about football rules.&quot;) for i in question: # for loop repeats every time an answer is given print(i[&quot;Question&quot;]) response = input(i[&quot;Question&quot;]) print(response) if response == i[&quot;Answer&quot;]: points += 1 print(&quot;Correct, you have &quot;, points, &quot; points!&quot;) else: print(&quot;Incorrect, the answer was; &quot;, i[&quot;Answer&quot;]) print(&quot;You have finished the quiz with &quot;, points, &quot; out of &quot;, len(question), &quot; points!&quot;) . Take this quiz about football rules. How mnay yards is a football field 120 yards Correct, you have 1 points! How many yards is the endzone 10 yards Correct, you have 2 points! How many yards is a first down penalty 5 yards Incorrect, the answer was; 10 yards how many players is on the offense 11 Incorrect, the answer was; 11 players You have finished the quiz with 2 out of 4 points! .",
            "url": "https://eligilmour.github.io/Eli-1/2022/09/05/listanddictionary.html",
            "relUrl": "/2022/09/05/listanddictionary.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post68": {
            "title": "HTML Fragments ( changing theme )",
            "content": "Here is the results . . Postitve effects . The positive effects of changing the theme was that I learned that fastpages has different versions of how you can create and make your website look. . Negative effects . the negative effects of changing the theme was that It switched everything around and pushed it all the way to the left side of the screen and you can’t use the top tabs that include about me, search, vocab, the table, and catergories which makes the theme not beneficial. .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/markdown/2022/09/05/changing-theme.html",
            "relUrl": "/fastpages/markdown/2022/09/05/changing-theme.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post69": {
            "title": "Tool check",
            "content": "echo &quot;version check&quot; python --version python2 --version python3 --version . version check Python 3.9.12 Python 2.7.18 Python 3.9.12 . echo &quot;check conda packages&quot; conda list . check conda packages # packages in environment at /home/eli/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.8.0 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.14.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.4.0 ipykernel : 6.15.1 ipywidgets : not installed jupyter_client : 7.3.5 jupyter_core : 4.11.1 jupyter_server : not installed jupyterlab : not installed nbclient : not installed nbconvert : not installed nbformat : not installed notebook : not installed qtconsole : not installed traitlets : 5.3.0 Available kernels: bash /home/eli/.local/share/jupyter/kernels/bash javascript /home/eli/.local/share/jupyter/kernels/javascript python3 /home/eli/.local/share/jupyter/kernels/python3 . echo &quot;jupyter check&quot; test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . jupyter check python3 /home/eli/.local/share/jupyter/kernels/python3 .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/juypter/2022/09/01/toolcheck.html",
            "relUrl": "/fastpages/juypter/2022/09/01/toolcheck.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post70": {
            "title": "The rules of football",
            "content": "question = [&quot;how many players are on offense on the feild at a time&quot;, &quot;how many players are on defense on the feild at a time&quot;, &quot;how many yards is the length of a football feild&quot;, &quot;How many yards is the length of the endzone&quot;] answer = [&quot;11&quot;, &quot;11&quot;, &quot;120 yards&quot;, &quot;10 yards&quot;] points = 0 print(&quot;Take this quiz about football basic rules.&quot;) for i in range(len(question)): print(question[i]) response = input() print(response) if response == answer[i]: points += 1 print(&quot;Correct, you have &quot;, points, &quot; points!&quot;) else: print(&quot;Incorrect, the answer was; &quot;, answer[i]) print(&quot;You have finished the quiz with &quot;, points, &quot; out of &quot;, len(question), &quot; points!&quot;) . Take this quiz about football basic rules. how many players are on offense on the feild at a time 11 Correct, you have 1 points! how many players are on defense on the feild at a time 10 Incorrect, the answer was; 11 how many yards is the length of a football feild 120 yards Correct, you have 2 points! How many yards is the length of the endzone 10 Incorrect, the answer was; 10 yards You have finished the quiz with 2 out of 4 points! .",
            "url": "https://eligilmour.github.io/Eli-1/2022/08/26/notebookquiz.html",
            "relUrl": "/2022/08/26/notebookquiz.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post71": {
            "title": "Bash Notebook",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscodex # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/eli/vscodex exists. Directory /home/eli/vscodex/APCSP exists. .",
            "url": "https://eligilmour.github.io/Eli-1/fastpages/juypter/2022/08/26/bashkernal.html",
            "relUrl": "/fastpages/juypter/2022/08/26/bashkernal.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post72": {
            "title": "First Notebook",
            "content": "abcdefg .",
            "url": "https://eligilmour.github.io/Eli-1/2022/08/22/notebook.html",
            "relUrl": "/2022/08/22/notebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post73": {
            "title": "Markdown",
            "content": "Age of football . what makes football so special . Football is the greatest sport ever in extist and many people around the world watch american football around the world. Football is played at many age levels ranging form young teens to adults playing in front of millions of people. . list Print(&quot;Hello World&quot;) . | .",
            "url": "https://eligilmour.github.io/Eli-1/2022/08/22/Markdown.html",
            "relUrl": "/2022/08/22/Markdown.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post74": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Sign Minus . +1 | 00000000 | 0 | 0 | 0 | = | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | | | | | | | | | | | | | | | | | .",
            "url": "https://eligilmour.github.io/Eli-1/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  

  
  
      ,"page0": {
          "title": "About Me",
          "content": "This site is built with fastpages . . Hello everyone My name is Eli Gilmour and I am here to share a little bit of information as to who I am. I was born and raised in San Diego and i am 16 years old. For my whole life I have played baseball and have been on many different travel clubs and as of two years ago I made the switch to football, which I currently play for del norte. I love to play video games, cook, and hang out with friends. .",
          "url": "https://eligilmour.github.io/Eli-1/about/Eli%20Gilmour",
          "relUrl": "/about/Eli Gilmour",
          "date": ""
      }
      
  

  

  
      ,"page2": {
          "title": "Whack-a-Mole",
          "content": "&lt;!DOCTYPE html&gt; . Whack-a-Mole Game . Whack-a-Mole Game . Score: 0 Start Stop Restart .",
          "url": "https://eligilmour.github.io/Eli-1/_pages/Memorygame.html",
          "relUrl": "/_pages/Memorygame.html",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Number Guesser",
          "content": "Guess The Number . Home Guess the Number . Try to guess the number between 1 and 100. . Submit . .",
          "url": "https://eligilmour.github.io/Eli-1/_pages/Numbergusser.html",
          "relUrl": "/_pages/Numbergusser.html",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "Theme Changer",
          "content": "Theme Changer . . Toggle Theme &lt;/html&gt; .",
          "url": "https://eligilmour.github.io/Eli-1/_pages/ThemeChanger.html",
          "relUrl": "/_pages/ThemeChanger.html",
          "date": ""
      }
      
  

  
      ,"page5": {
          "title": "Vocab",
          "content": "Vocab list . Input: Data going into to the code Output: Data coming out of the code Sequence: two or more lines . Fastpages . An open source blogging tool with support for Jupyter notebook, markdown, and docs . File Types . .md: used to create web pages .ipynb: jupyter notebook uses python and .md in conjunction .html: similar to .md files, however, .html is more difficult to use but allows for more effects than .md .",
          "url": "https://eligilmour.github.io/Eli-1/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  

  
      ,"page7": {
          "title": "Weekly work",
          "content": "Week Projects . 0 | My first jupyter notebook,—&gt; My First Markdown. | . 1 | Football quiz,—&gt; key tools check. | . 2 | changing a theme,—&gt; lists, Dictionaries, Iteration. | . 3 | Making quiz using app lab. | . 4 | collaboration Notes,—&gt;Psychology of Happiness. | . 5 | Javascript,—&gt; Final project plan | . 6 | college board quiz,—&gt; | . 7 | Stock Final Project plan,—&gt;Identifying and Correcting Errors Quiz | . 7 | Burger,Fries,Drink code Block Fix,—&gt; | .",
          "url": "https://eligilmour.github.io/Eli-1/WeeklyWork/",
          "relUrl": "/WeeklyWork/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  

  

  

  

  
  

  
      ,"page20": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://eligilmour.github.io/Eli-1/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}